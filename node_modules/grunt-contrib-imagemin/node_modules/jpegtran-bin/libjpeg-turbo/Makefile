# Makefile.in generated by automake 1.9.2 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






SOURCES = $(libjpeg_la_SOURCES) $(libturbojpeg_la_SOURCES) $(cjpeg_SOURCES) $(djpeg_SOURCES) $(jcstest_SOURCES) $(jpegtran_SOURCES) $(rdjpgcom_SOURCES) $(tjbench_SOURCES) $(tjunittest_SOURCES) $(wrjpgcom_SOURCES)

srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/libjpeg-turbo
pkglibdir = $(libdir)/libjpeg-turbo
pkgincludedir = $(includedir)/libjpeg-turbo
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-apple-darwin12.2.0
host_triplet = i686-apple-darwin
am__append_1 = libturbojpeg.la
am__append_2 = turbojpeg.h
am__append_3 = jaricom.c
am__append_4 = jcarith.c
am__append_5 = jdarith.c
#am__append_6 = turbojpeg-jni.c
am__append_7 = $(VERSION_SCRIPT_FLAG)$(srcdir)/$(TJMAPFILE)
am__append_8 = $(VERSION_SCRIPT_FLAG)libjpeg.map
am__append_9 = simd
#am__append_10 = jsimd_none.c
bin_PROGRAMS = cjpeg$(EXEEXT) djpeg$(EXEEXT) jpegtran$(EXEEXT) \
	rdjpgcom$(EXEEXT) wrjpgcom$(EXEEXT) $(am__EXEEXT_1)
noinst_PROGRAMS = jcstest$(EXEEXT) $(am__EXEEXT_2)
am__append_11 = tjbench
am__append_12 = tjunittest
DIST_COMMON = README $(am__configure_deps) $(am__include_HEADERS_DIST) \
	$(dist_doc_DATA) $(dist_example_DATA) $(dist_man1_MANS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(srcdir)/jconfig.h.in \
	$(srcdir)/libjpeg.map.in $(srcdir)/tjbenchtest.in \
	$(srcdir)/tjbenchtest.java.in $(srcdir)/tjexampletest.in \
	$(top_srcdir)/configure \
	$(top_srcdir)/release/Description.plist.in \
	$(top_srcdir)/release/Info.plist.in \
	$(top_srcdir)/release/libjpeg-turbo.spec.in \
	$(top_srcdir)/release/makecygwinpkg.in \
	$(top_srcdir)/release/makedpkg.in \
	$(top_srcdir)/release/makemacpkg.in \
	$(top_srcdir)/release/uninstall.in compile config.guess \
	config.sub depcomp install-sh ltmain.sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h jconfig.h
CONFIG_CLEAN_FILES = pkgscripts/libjpeg-turbo.spec \
	pkgscripts/makecygwinpkg pkgscripts/makedpkg \
	pkgscripts/makemacpkg pkgscripts/Description.plist \
	pkgscripts/Info.plist pkgscripts/uninstall tjbenchtest \
	tjbenchtest.java tjexampletest libjpeg.map
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(exampledir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libjpeg_la_DEPENDENCIES = simd/libsimd.la
am__libjpeg_la_SOURCES_DIST = jchuff.h jdct.h jdhuff.h jerror.h \
	jinclude.h jmemsys.h jmorecfg.h jpegint.h jpeglib.h jversion.h \
	jsimd.h jsimddct.h jpegcomp.h jcapimin.c jcapistd.c jccoefct.c \
	jccolor.c jcdctmgr.c jchuff.c jcinit.c jcmainct.c jcmarker.c \
	jcmaster.c jcomapi.c jcparam.c jcphuff.c jcprepct.c jcsample.c \
	jctrans.c jdapimin.c jdapistd.c jdatadst.c jdatasrc.c \
	jdcoefct.c jdcolor.c jddctmgr.c jdhuff.c jdinput.c jdmainct.c \
	jdmarker.c jdmaster.c jdmerge.c jdphuff.c jdpostct.c \
	jdsample.c jdtrans.c jerror.c jfdctflt.c jfdctfst.c jfdctint.c \
	jidctflt.c jidctfst.c jidctint.c jidctred.c jquant1.c \
	jquant2.c jutils.c jmemmgr.c jmemnobs.c jaricom.c jcarith.c \
	jdarith.c jsimd_none.c
am__objects_1 =
am__objects_2 = jaricom.lo
am__objects_3 = jcarith.lo
am__objects_4 = jdarith.lo
#am__objects_5 = jsimd_none.lo
am_libjpeg_la_OBJECTS = $(am__objects_1) jcapimin.lo jcapistd.lo \
	jccoefct.lo jccolor.lo jcdctmgr.lo jchuff.lo jcinit.lo \
	jcmainct.lo jcmarker.lo jcmaster.lo jcomapi.lo jcparam.lo \
	jcphuff.lo jcprepct.lo jcsample.lo jctrans.lo jdapimin.lo \
	jdapistd.lo jdatadst.lo jdatasrc.lo jdcoefct.lo jdcolor.lo \
	jddctmgr.lo jdhuff.lo jdinput.lo jdmainct.lo jdmarker.lo \
	jdmaster.lo jdmerge.lo jdphuff.lo jdpostct.lo jdsample.lo \
	jdtrans.lo jerror.lo jfdctflt.lo jfdctfst.lo jfdctint.lo \
	jidctflt.lo jidctfst.lo jidctint.lo jidctred.lo jquant1.lo \
	jquant2.lo jutils.lo jmemmgr.lo jmemnobs.lo $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5)
libjpeg_la_OBJECTS = $(am_libjpeg_la_OBJECTS)
libturbojpeg_la_DEPENDENCIES = simd/libsimd.la
am__libturbojpeg_la_SOURCES_DIST = jchuff.h jdct.h jdhuff.h jerror.h \
	jinclude.h jmemsys.h jmorecfg.h jpegint.h jpeglib.h jversion.h \
	jsimd.h jsimddct.h jpegcomp.h jcapimin.c jcapistd.c jccoefct.c \
	jccolor.c jcdctmgr.c jchuff.c jcinit.c jcmainct.c jcmarker.c \
	jcmaster.c jcomapi.c jcparam.c jcphuff.c jcprepct.c jcsample.c \
	jctrans.c jdapimin.c jdapistd.c jdatadst.c jdatasrc.c \
	jdcoefct.c jdcolor.c jddctmgr.c jdhuff.c jdinput.c jdmainct.c \
	jdmarker.c jdmaster.c jdmerge.c jdphuff.c jdpostct.c \
	jdsample.c jdtrans.c jerror.c jfdctflt.c jfdctfst.c jfdctint.c \
	jidctflt.c jidctfst.c jidctint.c jidctred.c jquant1.c \
	jquant2.c jutils.c jmemmgr.c jmemnobs.c jaricom.c jcarith.c \
	jdarith.c jsimd_none.c turbojpeg.c turbojpeg.h transupp.c \
	transupp.h jdatadst-tj.c jdatasrc-tj.c turbojpeg-jni.c \
	turbojpeg-mapfile turbojpeg-mapfile.jni
am__objects_6 = libturbojpeg_la-jaricom.lo
am__objects_7 = libturbojpeg_la-jcarith.lo
am__objects_8 = libturbojpeg_la-jdarith.lo
#am__objects_9 = libturbojpeg_la-jsimd_none.lo
am__objects_10 = $(am__objects_1) libturbojpeg_la-jcapimin.lo \
	libturbojpeg_la-jcapistd.lo libturbojpeg_la-jccoefct.lo \
	libturbojpeg_la-jccolor.lo libturbojpeg_la-jcdctmgr.lo \
	libturbojpeg_la-jchuff.lo libturbojpeg_la-jcinit.lo \
	libturbojpeg_la-jcmainct.lo libturbojpeg_la-jcmarker.lo \
	libturbojpeg_la-jcmaster.lo libturbojpeg_la-jcomapi.lo \
	libturbojpeg_la-jcparam.lo libturbojpeg_la-jcphuff.lo \
	libturbojpeg_la-jcprepct.lo libturbojpeg_la-jcsample.lo \
	libturbojpeg_la-jctrans.lo libturbojpeg_la-jdapimin.lo \
	libturbojpeg_la-jdapistd.lo libturbojpeg_la-jdatadst.lo \
	libturbojpeg_la-jdatasrc.lo libturbojpeg_la-jdcoefct.lo \
	libturbojpeg_la-jdcolor.lo libturbojpeg_la-jddctmgr.lo \
	libturbojpeg_la-jdhuff.lo libturbojpeg_la-jdinput.lo \
	libturbojpeg_la-jdmainct.lo libturbojpeg_la-jdmarker.lo \
	libturbojpeg_la-jdmaster.lo libturbojpeg_la-jdmerge.lo \
	libturbojpeg_la-jdphuff.lo libturbojpeg_la-jdpostct.lo \
	libturbojpeg_la-jdsample.lo libturbojpeg_la-jdtrans.lo \
	libturbojpeg_la-jerror.lo libturbojpeg_la-jfdctflt.lo \
	libturbojpeg_la-jfdctfst.lo libturbojpeg_la-jfdctint.lo \
	libturbojpeg_la-jidctflt.lo libturbojpeg_la-jidctfst.lo \
	libturbojpeg_la-jidctint.lo libturbojpeg_la-jidctred.lo \
	libturbojpeg_la-jquant1.lo libturbojpeg_la-jquant2.lo \
	libturbojpeg_la-jutils.lo libturbojpeg_la-jmemmgr.lo \
	libturbojpeg_la-jmemnobs.lo $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9)
#am__objects_11 = libturbojpeg_la-turbojpeg-jni.lo
am_libturbojpeg_la_OBJECTS = $(am__objects_10) \
	libturbojpeg_la-turbojpeg.lo \
	libturbojpeg_la-transupp.lo \
	libturbojpeg_la-jdatadst-tj.lo \
	libturbojpeg_la-jdatasrc-tj.lo \
	$(am__objects_11) $(am__objects_1)
libturbojpeg_la_OBJECTS = $(am_libturbojpeg_la_OBJECTS)
am_libturbojpeg_la_rpath = -rpath $(libdir)
am__EXEEXT_1 = tjbench$(EXEEXT)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
am__EXEEXT_2 = tjunittest$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_cjpeg_OBJECTS = cjpeg-cdjpeg.$(OBJEXT) cjpeg-cjpeg.$(OBJEXT) \
	cjpeg-rdbmp.$(OBJEXT) cjpeg-rdgif.$(OBJEXT) \
	cjpeg-rdppm.$(OBJEXT) cjpeg-rdswitch.$(OBJEXT) \
	cjpeg-rdtarga.$(OBJEXT)
cjpeg_OBJECTS = $(am_cjpeg_OBJECTS)
cjpeg_DEPENDENCIES = libjpeg.la
am_djpeg_OBJECTS = djpeg-cdjpeg.$(OBJEXT) djpeg-djpeg.$(OBJEXT) \
	djpeg-rdcolmap.$(OBJEXT) djpeg-rdswitch.$(OBJEXT) \
	djpeg-wrbmp.$(OBJEXT) djpeg-wrgif.$(OBJEXT) \
	djpeg-wrppm.$(OBJEXT) djpeg-wrtarga.$(OBJEXT)
djpeg_OBJECTS = $(am_djpeg_OBJECTS)
djpeg_DEPENDENCIES = libjpeg.la
am_jcstest_OBJECTS = jcstest.$(OBJEXT)
jcstest_OBJECTS = $(am_jcstest_OBJECTS)
jcstest_DEPENDENCIES = libjpeg.la
am_jpegtran_OBJECTS = jpegtran.$(OBJEXT) rdswitch.$(OBJEXT) \
	cdjpeg.$(OBJEXT) transupp.$(OBJEXT)
jpegtran_OBJECTS = $(am_jpegtran_OBJECTS)
jpegtran_DEPENDENCIES = libjpeg.la
am_rdjpgcom_OBJECTS = rdjpgcom.$(OBJEXT)
rdjpgcom_OBJECTS = $(am_rdjpgcom_OBJECTS)
rdjpgcom_DEPENDENCIES = libjpeg.la
am__tjbench_SOURCES_DIST = tjbench.c bmp.h bmp.c tjutil.h tjutil.c \
	rdbmp.c rdppm.c wrbmp.c wrppm.c
am_tjbench_OBJECTS = tjbench-tjbench.$(OBJEXT) \
	tjbench-bmp.$(OBJEXT) \
	tjbench-tjutil.$(OBJEXT) \
	tjbench-rdbmp.$(OBJEXT) \
	tjbench-rdppm.$(OBJEXT) \
	tjbench-wrbmp.$(OBJEXT) \
	tjbench-wrppm.$(OBJEXT)
tjbench_OBJECTS = $(am_tjbench_OBJECTS)
tjbench_DEPENDENCIES = libturbojpeg.la libjpeg.la
am__tjunittest_SOURCES_DIST = tjunittest.c tjutil.h tjutil.c
am_tjunittest_OBJECTS = tjunittest.$(OBJEXT) \
	tjutil.$(OBJEXT)
tjunittest_OBJECTS = $(am_tjunittest_OBJECTS)
tjunittest_DEPENDENCIES = libturbojpeg.la
am_wrjpgcom_OBJECTS = wrjpgcom.$(OBJEXT)
wrjpgcom_OBJECTS = $(am_wrjpgcom_OBJECTS)
wrjpgcom_DEPENDENCIES = libjpeg.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I. -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libjpeg_la_SOURCES) $(libturbojpeg_la_SOURCES) \
	$(cjpeg_SOURCES) $(djpeg_SOURCES) $(jcstest_SOURCES) \
	$(jpegtran_SOURCES) $(rdjpgcom_SOURCES) $(tjbench_SOURCES) \
	$(tjunittest_SOURCES) $(wrjpgcom_SOURCES)
DIST_SOURCES = $(am__libjpeg_la_SOURCES_DIST) \
	$(am__libturbojpeg_la_SOURCES_DIST) $(cjpeg_SOURCES) \
	$(djpeg_SOURCES) $(jcstest_SOURCES) $(jpegtran_SOURCES) \
	$(rdjpgcom_SOURCES) $(am__tjbench_SOURCES_DIST) \
	$(am__tjunittest_SOURCES_DIST) $(wrjpgcom_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man1_MANS)
dist_docDATA_INSTALL = $(INSTALL_DATA)
dist_exampleDATA_INSTALL = $(INSTALL_DATA)
DATA = $(dist_doc_DATA) $(dist_example_DATA)
am__include_HEADERS_DIST = jerror.h jmorecfg.h jpeglib.h turbojpeg.h
includeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(nodist_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = java simd
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /Users/dwong/projects/github/badunk/node-jpegtran-bin/libjpeg-turbo/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/dwong/projects/github/badunk/node-jpegtran-bin/libjpeg-turbo/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/dwong/projects/github/badunk/node-jpegtran-bin/libjpeg-turbo/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/dwong/projects/github/badunk/node-jpegtran-bin/libjpeg-turbo/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/dwong/projects/github/badunk/node-jpegtran-bin/libjpeg-turbo/missing --run automake-1.9
AWK = awk
BUILD = 20130223
CC = gcc
CCAS = gcc
CCASFLAGS = -O3 -m32
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -m32
CPP = gcc -E
CPPFLAGS = -Wall
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBARCH = i386
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JAR = jar
JAVA = java
JAVAC = javac
JAVACFLAGS = 
JAVA_RPM_CONTENTS_1 = 
JAVA_RPM_CONTENTS_2 = 
JNI_CFLAGS = 
JPEG_LIB_VERSION = 62
JPEG_LIB_VERSION_DECIMAL = 6.2
LDFLAGS = -m32
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_CURRENT = 63
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/dwong/projects/github/badunk/node-jpegtran-bin/libjpeg-turbo/missing --run makeinfo
MEM_SRCDST_FUNCTIONS = global:  jpeg_mem_dest;  jpeg_mem_src;
NAFLAGS = -fmacho -DMACHO
NASM = nasm
OBJEXT = o
PACKAGE = libjpeg-turbo
PACKAGE_BUGREPORT = 
PACKAGE_NAME = libjpeg-turbo
PACKAGE_STRING = libjpeg-turbo 1.2.90
PACKAGE_TARNAME = libjpeg-turbo
PACKAGE_VERSION = 1.2.90
PATH_SEPARATOR = :
RANLIB = ranlib
RPMARCH = i386
RPM_CONFIG_ARGS = 
SET_MAKE = 
SHELL = /bin/sh
SIMD_ARM_FALSE = 
SIMD_ARM_TRUE = #
SIMD_I386_FALSE = #
SIMD_I386_TRUE = 
SIMD_X86_64_FALSE = 
SIMD_X86_64_TRUE = #
SO_AGE = 1
SO_MAJOR_VERSION = 62
SO_MINOR_VERSION = 0
STRIP = strip
VERSION = 1.2.90
VERSION_SCRIPT_FALSE = #
VERSION_SCRIPT_FLAG = -Wl,-M,
VERSION_SCRIPT_TRUE = 
WITH_ARITH_DEC_FALSE = #
WITH_ARITH_DEC_TRUE = 
WITH_ARITH_ENC_FALSE = #
WITH_ARITH_ENC_TRUE = 
WITH_ARITH_FALSE = #
WITH_ARITH_TRUE = 
WITH_JAVA = 0
WITH_JAVA_FALSE = 
WITH_JAVA_TRUE = #
WITH_SIMD_FALSE = #
WITH_SIMD_TRUE = 
WITH_SSE_FLOAT_DCT_FALSE = #
WITH_SSE_FLOAT_DCT_TRUE = 
WITH_TURBOJPEG_FALSE = #
WITH_TURBOJPEG_TRUE = 
X86_64_FALSE = 
X86_64_TRUE = #
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-apple-darwin12.2.0
build_alias = 
build_cpu = i686
build_os = darwin12.2.0
build_vendor = apple
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-apple-darwin
host_alias = i686-apple-darwin
host_cpu = i686
host_os = darwin
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/dwong/projects/github/badunk/node-jpegtran-bin/libjpeg-turbo/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(install_sh) -d
oldincludedir = /usr/include
prefix = /opt/libjpeg-turbo
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
lib_LTLIBRARIES = libjpeg.la $(am__append_1)
libjpeg_la_LDFLAGS = -version-info \
	${LIBTOOL_CURRENT}:${SO_MINOR_VERSION}:${SO_AGE} -no-undefined \
	$(am__append_8)
include_HEADERS = jerror.h jmorecfg.h jpeglib.h $(am__append_2)
libturbojpeg_la_LDFLAGS = -version-info 0:0 \
	-no-undefined $(am__append_7)
nodist_include_HEADERS = jconfig.h
HDRS = jchuff.h jdct.h jdhuff.h jerror.h jinclude.h jmemsys.h jmorecfg.h \
	jpegint.h jpeglib.h jversion.h jsimd.h jsimddct.h jpegcomp.h

libjpeg_la_SOURCES = $(HDRS) jcapimin.c jcapistd.c jccoefct.c \
	jccolor.c jcdctmgr.c jchuff.c jcinit.c jcmainct.c jcmarker.c \
	jcmaster.c jcomapi.c jcparam.c jcphuff.c jcprepct.c jcsample.c \
	jctrans.c jdapimin.c jdapistd.c jdatadst.c jdatasrc.c \
	jdcoefct.c jdcolor.c jddctmgr.c jdhuff.c jdinput.c jdmainct.c \
	jdmarker.c jdmaster.c jdmerge.c jdphuff.c jdpostct.c \
	jdsample.c jdtrans.c jerror.c jfdctflt.c jfdctfst.c jfdctint.c \
	jidctflt.c jidctfst.c jidctint.c jidctred.c jquant1.c \
	jquant2.c jutils.c jmemmgr.c jmemnobs.c $(am__append_3) \
	$(am__append_4) $(am__append_5) $(am__append_10)
SUBDIRS = java $(am__append_9)
libturbojpeg_la_SOURCES = $(libjpeg_la_SOURCES) \
	turbojpeg.c turbojpeg.h transupp.c \
	transupp.h jdatadst-tj.c jdatasrc-tj.c \
	$(am__append_6) $(TJMAPFILE)
#libturbojpeg_la_CFLAGS = ${JNI_CFLAGS}
TJMAPFILE = turbojpeg-mapfile
#TJMAPFILE = turbojpeg-mapfile.jni
libjpeg_la_LIBADD = simd/libsimd.la
libturbojpeg_la_LIBADD = simd/libsimd.la
tjbench_SOURCES = tjbench.c bmp.h bmp.c tjutil.h tjutil.c rdbmp.c rdppm.c \
	wrbmp.c wrppm.c

tjbench_LDADD = libturbojpeg.la libjpeg.la -lm
tjbench_CFLAGS = -DBMP_SUPPORTED -DPPM_SUPPORTED
tjunittest_SOURCES = tjunittest.c tjutil.h tjutil.c
tjunittest_LDADD = libturbojpeg.la
cjpeg_SOURCES = cdjpeg.h cderror.h cdjpeg.c cjpeg.c rdbmp.c rdgif.c \
	rdppm.c rdswitch.c rdtarga.c 

cjpeg_LDADD = libjpeg.la
cjpeg_CFLAGS = -DBMP_SUPPORTED -DGIF_SUPPORTED -DPPM_SUPPORTED \
	-DTARGA_SUPPORTED

djpeg_SOURCES = cdjpeg.h cderror.h cdjpeg.c djpeg.c rdcolmap.c rdswitch.c \
	wrbmp.c wrgif.c wrppm.c wrtarga.c

djpeg_LDADD = libjpeg.la
djpeg_CFLAGS = -DBMP_SUPPORTED -DGIF_SUPPORTED -DPPM_SUPPORTED \
	-DTARGA_SUPPORTED

jpegtran_SOURCES = jpegtran.c rdswitch.c cdjpeg.c transupp.c transupp.h
jpegtran_LDADD = libjpeg.la
rdjpgcom_SOURCES = rdjpgcom.c
rdjpgcom_LDADD = libjpeg.la
wrjpgcom_SOURCES = wrjpgcom.c
wrjpgcom_LDADD = libjpeg.la
jcstest_SOURCES = jcstest.c
jcstest_LDADD = libjpeg.la
dist_man1_MANS = cjpeg.1 djpeg.1 jpegtran.1 rdjpgcom.1 wrjpgcom.1
DOCS = coderules.txt jconfig.txt change.log rdrle.c wrrle.c BUILDING.txt \
	ChangeLog.txt

docdir = $(datadir)/doc
dist_doc_DATA = README README-turbo.txt libjpeg.txt structure.txt usage.txt \
	wizard.txt 

exampledir = $(datadir)/doc
dist_example_DATA = example.c
EXTRA_DIST = win release $(DOCS) testimages md5cmp CMakeLists.txt \
	sharedlib/CMakeLists.txt cmakescripts libjpeg.map.in doc doxygen.config \
	jccolext.c jdcolext.c jdmrgext.c

MD5_JPEG_INT = 9a68f56bc76e466aa7e52f415d0f4a5f
MD5_JPEG_FAST = 0e1502e7fa421835e376a314fac2a39f
MD5_JPEG_FAST_100 = 7bf72a8e741d64eecb960c97323af77c
MD5_JPEG_FLOAT = d1623885ffafcd40c684af09e3d65cd5
MD5_JPEG_FLOAT_NOSIMD = fb4884c35f8273f498cb32879de5c455
MD5_JPEG_INT_GRAY = 72b51f894b8f4a10b3ee3066770aa38d
MD5_PPM_INT = d1ed0d11f076b842525271647716aeb8
MD5_PPM_FAST = 048298a2d2410261c0533cb97bcfef23
MD5_PPM_FLOAT = 7f5b446ee36b2630e06785b8d42af15f
MD5_PPM_FLOAT_NOSIMD = 64072f1dbdc5b3a187777788604971a5
MD5_PPM_INT_2_1 = 9f9de8c0612f8d06869b960b05abf9c9
MD5_PPM_INT_15_8 = b6875bc070720b899566cc06459b63b7
MD5_PPM_INT_7_4 = 06a177eae05f164fac57f7a2c346ee87
MD5_PPM_INT_13_8 = bc3452573c8152f6ae552939ee19f82f
MD5_PPM_INT_3_2 = f5a8b88a8a7f96016f04d259cf82ed67
MD5_PPM_INT_11_8 = d8cc73c0aaacd4556569b59437ba00a5
MD5_PPM_INT_5_4 = 32775dd9ad2ab90f4c5b219b53e0c86c
MD5_PPM_INT_9_8 = d25e61bc7eac0002f5b393aa223747b6
MD5_PPM_INT_7_8 = ddb564b7c74a09494016d6cd7502a946
MD5_PPM_INT_3_4 = 8ed8e68808c3fbc4ea764fc9d2968646
MD5_PPM_INT_5_8 = a3363274999da2366a024efae6d16c9b
MD5_PPM_INT_1_2 = e692a315cea26b988c8e8b29a5dbcd81
MD5_PPM_INT_3_8 = 79eca9175652ced755155c90e785a996
MD5_PPM_INT_1_4 = 79cd778f8bf1a117690052cacdd54eca
MD5_PPM_INT_1_8 = 391b3d4aca640c8567d6f8745eb2142f
MD5_PPM_FAST_1_2 = f30bcf6d32ccd44cbdd9aeaacbd9454f
MD5_BMP_256 = 4980185e3776e89bd931736e1cddeee6
MD5_JPEG_ARI = e986fb0a637a8d833d96e8a6d6d84ea1
MD5_PPM_ARI = 72b59a99bcf1de24c5b27d151bde2437
MD5_JPEG_PROG = 1c4afddc05c0a43489ee54438a482d92
MD5_JPEG_CROP = b4197f377e621c4e9b1d20471432610d
all: config.h jconfig.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

jconfig.h: stamp-h2
	@if test ! -f $@; then \
	  rm -f stamp-h2; \
	  $(MAKE) stamp-h2; \
	else :; fi

stamp-h2: $(srcdir)/jconfig.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status jconfig.h

distclean-hdr:
	-rm -f config.h stamp-h1 jconfig.h stamp-h2
pkgscripts/libjpeg-turbo.spec: $(top_builddir)/config.status $(top_srcdir)/release/libjpeg-turbo.spec.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgscripts/makecygwinpkg: $(top_builddir)/config.status $(top_srcdir)/release/makecygwinpkg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgscripts/makedpkg: $(top_builddir)/config.status $(top_srcdir)/release/makedpkg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgscripts/makemacpkg: $(top_builddir)/config.status $(top_srcdir)/release/makemacpkg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgscripts/Description.plist: $(top_builddir)/config.status $(top_srcdir)/release/Description.plist.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgscripts/Info.plist: $(top_builddir)/config.status $(top_srcdir)/release/Info.plist.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgscripts/uninstall: $(top_builddir)/config.status $(top_srcdir)/release/uninstall.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tjbenchtest: $(top_builddir)/config.status $(srcdir)/tjbenchtest.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tjbenchtest.java: $(top_builddir)/config.status $(srcdir)/tjbenchtest.java.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tjexampletest: $(top_builddir)/config.status $(srcdir)/tjexampletest.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
libjpeg.map: $(top_builddir)/config.status $(srcdir)/libjpeg.map.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjpeg.la: $(libjpeg_la_OBJECTS) $(libjpeg_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libjpeg_la_LDFLAGS) $(libjpeg_la_OBJECTS) $(libjpeg_la_LIBADD) $(LIBS)
libturbojpeg.la: $(libturbojpeg_la_OBJECTS) $(libturbojpeg_la_DEPENDENCIES) 
	$(LINK) $(am_libturbojpeg_la_rpath) $(libturbojpeg_la_LDFLAGS) $(libturbojpeg_la_OBJECTS) $(libturbojpeg_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
cjpeg$(EXEEXT): $(cjpeg_OBJECTS) $(cjpeg_DEPENDENCIES) 
	@rm -f cjpeg$(EXEEXT)
	$(LINK) $(cjpeg_LDFLAGS) $(cjpeg_OBJECTS) $(cjpeg_LDADD) $(LIBS)
djpeg$(EXEEXT): $(djpeg_OBJECTS) $(djpeg_DEPENDENCIES) 
	@rm -f djpeg$(EXEEXT)
	$(LINK) $(djpeg_LDFLAGS) $(djpeg_OBJECTS) $(djpeg_LDADD) $(LIBS)
jcstest$(EXEEXT): $(jcstest_OBJECTS) $(jcstest_DEPENDENCIES) 
	@rm -f jcstest$(EXEEXT)
	$(LINK) $(jcstest_LDFLAGS) $(jcstest_OBJECTS) $(jcstest_LDADD) $(LIBS)
jpegtran$(EXEEXT): $(jpegtran_OBJECTS) $(jpegtran_DEPENDENCIES) 
	@rm -f jpegtran$(EXEEXT)
	$(LINK) $(jpegtran_LDFLAGS) $(jpegtran_OBJECTS) $(jpegtran_LDADD) $(LIBS)
rdjpgcom$(EXEEXT): $(rdjpgcom_OBJECTS) $(rdjpgcom_DEPENDENCIES) 
	@rm -f rdjpgcom$(EXEEXT)
	$(LINK) $(rdjpgcom_LDFLAGS) $(rdjpgcom_OBJECTS) $(rdjpgcom_LDADD) $(LIBS)
tjbench$(EXEEXT): $(tjbench_OBJECTS) $(tjbench_DEPENDENCIES) 
	@rm -f tjbench$(EXEEXT)
	$(LINK) $(tjbench_LDFLAGS) $(tjbench_OBJECTS) $(tjbench_LDADD) $(LIBS)
tjunittest$(EXEEXT): $(tjunittest_OBJECTS) $(tjunittest_DEPENDENCIES) 
	@rm -f tjunittest$(EXEEXT)
	$(LINK) $(tjunittest_LDFLAGS) $(tjunittest_OBJECTS) $(tjunittest_LDADD) $(LIBS)
wrjpgcom$(EXEEXT): $(wrjpgcom_OBJECTS) $(wrjpgcom_DEPENDENCIES) 
	@rm -f wrjpgcom$(EXEEXT)
	$(LINK) $(wrjpgcom_LDFLAGS) $(wrjpgcom_OBJECTS) $(wrjpgcom_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cdjpeg.Po
include ./$(DEPDIR)/cjpeg-cdjpeg.Po
include ./$(DEPDIR)/cjpeg-cjpeg.Po
include ./$(DEPDIR)/cjpeg-rdbmp.Po
include ./$(DEPDIR)/cjpeg-rdgif.Po
include ./$(DEPDIR)/cjpeg-rdppm.Po
include ./$(DEPDIR)/cjpeg-rdswitch.Po
include ./$(DEPDIR)/cjpeg-rdtarga.Po
include ./$(DEPDIR)/djpeg-cdjpeg.Po
include ./$(DEPDIR)/djpeg-djpeg.Po
include ./$(DEPDIR)/djpeg-rdcolmap.Po
include ./$(DEPDIR)/djpeg-rdswitch.Po
include ./$(DEPDIR)/djpeg-wrbmp.Po
include ./$(DEPDIR)/djpeg-wrgif.Po
include ./$(DEPDIR)/djpeg-wrppm.Po
include ./$(DEPDIR)/djpeg-wrtarga.Po
include ./$(DEPDIR)/jaricom.Plo
include ./$(DEPDIR)/jcapimin.Plo
include ./$(DEPDIR)/jcapistd.Plo
include ./$(DEPDIR)/jcarith.Plo
include ./$(DEPDIR)/jccoefct.Plo
include ./$(DEPDIR)/jccolor.Plo
include ./$(DEPDIR)/jcdctmgr.Plo
include ./$(DEPDIR)/jchuff.Plo
include ./$(DEPDIR)/jcinit.Plo
include ./$(DEPDIR)/jcmainct.Plo
include ./$(DEPDIR)/jcmarker.Plo
include ./$(DEPDIR)/jcmaster.Plo
include ./$(DEPDIR)/jcomapi.Plo
include ./$(DEPDIR)/jcparam.Plo
include ./$(DEPDIR)/jcphuff.Plo
include ./$(DEPDIR)/jcprepct.Plo
include ./$(DEPDIR)/jcsample.Plo
include ./$(DEPDIR)/jcstest.Po
include ./$(DEPDIR)/jctrans.Plo
include ./$(DEPDIR)/jdapimin.Plo
include ./$(DEPDIR)/jdapistd.Plo
include ./$(DEPDIR)/jdarith.Plo
include ./$(DEPDIR)/jdatadst.Plo
include ./$(DEPDIR)/jdatasrc.Plo
include ./$(DEPDIR)/jdcoefct.Plo
include ./$(DEPDIR)/jdcolor.Plo
include ./$(DEPDIR)/jddctmgr.Plo
include ./$(DEPDIR)/jdhuff.Plo
include ./$(DEPDIR)/jdinput.Plo
include ./$(DEPDIR)/jdmainct.Plo
include ./$(DEPDIR)/jdmarker.Plo
include ./$(DEPDIR)/jdmaster.Plo
include ./$(DEPDIR)/jdmerge.Plo
include ./$(DEPDIR)/jdphuff.Plo
include ./$(DEPDIR)/jdpostct.Plo
include ./$(DEPDIR)/jdsample.Plo
include ./$(DEPDIR)/jdtrans.Plo
include ./$(DEPDIR)/jerror.Plo
include ./$(DEPDIR)/jfdctflt.Plo
include ./$(DEPDIR)/jfdctfst.Plo
include ./$(DEPDIR)/jfdctint.Plo
include ./$(DEPDIR)/jidctflt.Plo
include ./$(DEPDIR)/jidctfst.Plo
include ./$(DEPDIR)/jidctint.Plo
include ./$(DEPDIR)/jidctred.Plo
include ./$(DEPDIR)/jmemmgr.Plo
include ./$(DEPDIR)/jmemnobs.Plo
include ./$(DEPDIR)/jpegtran.Po
include ./$(DEPDIR)/jquant1.Plo
include ./$(DEPDIR)/jquant2.Plo
include ./$(DEPDIR)/jsimd_none.Plo
include ./$(DEPDIR)/jutils.Plo
include ./$(DEPDIR)/libturbojpeg_la-jaricom.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcapimin.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcapistd.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcarith.Plo
include ./$(DEPDIR)/libturbojpeg_la-jccoefct.Plo
include ./$(DEPDIR)/libturbojpeg_la-jccolor.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcdctmgr.Plo
include ./$(DEPDIR)/libturbojpeg_la-jchuff.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcinit.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcmainct.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcmarker.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcmaster.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcomapi.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcparam.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcphuff.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcprepct.Plo
include ./$(DEPDIR)/libturbojpeg_la-jcsample.Plo
include ./$(DEPDIR)/libturbojpeg_la-jctrans.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdapimin.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdapistd.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdarith.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdatadst-tj.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdatadst.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdatasrc-tj.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdatasrc.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdcoefct.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdcolor.Plo
include ./$(DEPDIR)/libturbojpeg_la-jddctmgr.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdhuff.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdinput.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdmainct.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdmarker.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdmaster.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdmerge.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdphuff.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdpostct.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdsample.Plo
include ./$(DEPDIR)/libturbojpeg_la-jdtrans.Plo
include ./$(DEPDIR)/libturbojpeg_la-jerror.Plo
include ./$(DEPDIR)/libturbojpeg_la-jfdctflt.Plo
include ./$(DEPDIR)/libturbojpeg_la-jfdctfst.Plo
include ./$(DEPDIR)/libturbojpeg_la-jfdctint.Plo
include ./$(DEPDIR)/libturbojpeg_la-jidctflt.Plo
include ./$(DEPDIR)/libturbojpeg_la-jidctfst.Plo
include ./$(DEPDIR)/libturbojpeg_la-jidctint.Plo
include ./$(DEPDIR)/libturbojpeg_la-jidctred.Plo
include ./$(DEPDIR)/libturbojpeg_la-jmemmgr.Plo
include ./$(DEPDIR)/libturbojpeg_la-jmemnobs.Plo
include ./$(DEPDIR)/libturbojpeg_la-jquant1.Plo
include ./$(DEPDIR)/libturbojpeg_la-jquant2.Plo
include ./$(DEPDIR)/libturbojpeg_la-jsimd_none.Plo
include ./$(DEPDIR)/libturbojpeg_la-jutils.Plo
include ./$(DEPDIR)/libturbojpeg_la-transupp.Plo
include ./$(DEPDIR)/libturbojpeg_la-turbojpeg-jni.Plo
include ./$(DEPDIR)/libturbojpeg_la-turbojpeg.Plo
include ./$(DEPDIR)/rdjpgcom.Po
include ./$(DEPDIR)/rdswitch.Po
include ./$(DEPDIR)/tjbench-bmp.Po
include ./$(DEPDIR)/tjbench-rdbmp.Po
include ./$(DEPDIR)/tjbench-rdppm.Po
include ./$(DEPDIR)/tjbench-tjbench.Po
include ./$(DEPDIR)/tjbench-tjutil.Po
include ./$(DEPDIR)/tjbench-wrbmp.Po
include ./$(DEPDIR)/tjbench-wrppm.Po
include ./$(DEPDIR)/tjunittest.Po
include ./$(DEPDIR)/tjutil.Po
include ./$(DEPDIR)/transupp.Po
include ./$(DEPDIR)/wrjpgcom.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libturbojpeg_la-jcapimin.lo: jcapimin.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcapimin.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcapimin.Tpo" -c -o libturbojpeg_la-jcapimin.lo `test -f 'jcapimin.c' || echo '$(srcdir)/'`jcapimin.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcapimin.Tpo" "$(DEPDIR)/libturbojpeg_la-jcapimin.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcapimin.Tpo"; exit 1; fi
#	source='jcapimin.c' object='libturbojpeg_la-jcapimin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcapimin.lo `test -f 'jcapimin.c' || echo '$(srcdir)/'`jcapimin.c

libturbojpeg_la-jcapistd.lo: jcapistd.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcapistd.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcapistd.Tpo" -c -o libturbojpeg_la-jcapistd.lo `test -f 'jcapistd.c' || echo '$(srcdir)/'`jcapistd.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcapistd.Tpo" "$(DEPDIR)/libturbojpeg_la-jcapistd.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcapistd.Tpo"; exit 1; fi
#	source='jcapistd.c' object='libturbojpeg_la-jcapistd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcapistd.lo `test -f 'jcapistd.c' || echo '$(srcdir)/'`jcapistd.c

libturbojpeg_la-jccoefct.lo: jccoefct.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jccoefct.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jccoefct.Tpo" -c -o libturbojpeg_la-jccoefct.lo `test -f 'jccoefct.c' || echo '$(srcdir)/'`jccoefct.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jccoefct.Tpo" "$(DEPDIR)/libturbojpeg_la-jccoefct.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jccoefct.Tpo"; exit 1; fi
#	source='jccoefct.c' object='libturbojpeg_la-jccoefct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jccoefct.lo `test -f 'jccoefct.c' || echo '$(srcdir)/'`jccoefct.c

libturbojpeg_la-jccolor.lo: jccolor.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jccolor.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jccolor.Tpo" -c -o libturbojpeg_la-jccolor.lo `test -f 'jccolor.c' || echo '$(srcdir)/'`jccolor.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jccolor.Tpo" "$(DEPDIR)/libturbojpeg_la-jccolor.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jccolor.Tpo"; exit 1; fi
#	source='jccolor.c' object='libturbojpeg_la-jccolor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jccolor.lo `test -f 'jccolor.c' || echo '$(srcdir)/'`jccolor.c

libturbojpeg_la-jcdctmgr.lo: jcdctmgr.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcdctmgr.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcdctmgr.Tpo" -c -o libturbojpeg_la-jcdctmgr.lo `test -f 'jcdctmgr.c' || echo '$(srcdir)/'`jcdctmgr.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcdctmgr.Tpo" "$(DEPDIR)/libturbojpeg_la-jcdctmgr.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcdctmgr.Tpo"; exit 1; fi
#	source='jcdctmgr.c' object='libturbojpeg_la-jcdctmgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcdctmgr.lo `test -f 'jcdctmgr.c' || echo '$(srcdir)/'`jcdctmgr.c

libturbojpeg_la-jchuff.lo: jchuff.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jchuff.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jchuff.Tpo" -c -o libturbojpeg_la-jchuff.lo `test -f 'jchuff.c' || echo '$(srcdir)/'`jchuff.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jchuff.Tpo" "$(DEPDIR)/libturbojpeg_la-jchuff.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jchuff.Tpo"; exit 1; fi
#	source='jchuff.c' object='libturbojpeg_la-jchuff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jchuff.lo `test -f 'jchuff.c' || echo '$(srcdir)/'`jchuff.c

libturbojpeg_la-jcinit.lo: jcinit.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcinit.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcinit.Tpo" -c -o libturbojpeg_la-jcinit.lo `test -f 'jcinit.c' || echo '$(srcdir)/'`jcinit.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcinit.Tpo" "$(DEPDIR)/libturbojpeg_la-jcinit.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcinit.Tpo"; exit 1; fi
#	source='jcinit.c' object='libturbojpeg_la-jcinit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcinit.lo `test -f 'jcinit.c' || echo '$(srcdir)/'`jcinit.c

libturbojpeg_la-jcmainct.lo: jcmainct.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcmainct.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcmainct.Tpo" -c -o libturbojpeg_la-jcmainct.lo `test -f 'jcmainct.c' || echo '$(srcdir)/'`jcmainct.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcmainct.Tpo" "$(DEPDIR)/libturbojpeg_la-jcmainct.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcmainct.Tpo"; exit 1; fi
#	source='jcmainct.c' object='libturbojpeg_la-jcmainct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcmainct.lo `test -f 'jcmainct.c' || echo '$(srcdir)/'`jcmainct.c

libturbojpeg_la-jcmarker.lo: jcmarker.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcmarker.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcmarker.Tpo" -c -o libturbojpeg_la-jcmarker.lo `test -f 'jcmarker.c' || echo '$(srcdir)/'`jcmarker.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcmarker.Tpo" "$(DEPDIR)/libturbojpeg_la-jcmarker.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcmarker.Tpo"; exit 1; fi
#	source='jcmarker.c' object='libturbojpeg_la-jcmarker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcmarker.lo `test -f 'jcmarker.c' || echo '$(srcdir)/'`jcmarker.c

libturbojpeg_la-jcmaster.lo: jcmaster.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcmaster.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcmaster.Tpo" -c -o libturbojpeg_la-jcmaster.lo `test -f 'jcmaster.c' || echo '$(srcdir)/'`jcmaster.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcmaster.Tpo" "$(DEPDIR)/libturbojpeg_la-jcmaster.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcmaster.Tpo"; exit 1; fi
#	source='jcmaster.c' object='libturbojpeg_la-jcmaster.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcmaster.lo `test -f 'jcmaster.c' || echo '$(srcdir)/'`jcmaster.c

libturbojpeg_la-jcomapi.lo: jcomapi.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcomapi.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcomapi.Tpo" -c -o libturbojpeg_la-jcomapi.lo `test -f 'jcomapi.c' || echo '$(srcdir)/'`jcomapi.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcomapi.Tpo" "$(DEPDIR)/libturbojpeg_la-jcomapi.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcomapi.Tpo"; exit 1; fi
#	source='jcomapi.c' object='libturbojpeg_la-jcomapi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcomapi.lo `test -f 'jcomapi.c' || echo '$(srcdir)/'`jcomapi.c

libturbojpeg_la-jcparam.lo: jcparam.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcparam.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcparam.Tpo" -c -o libturbojpeg_la-jcparam.lo `test -f 'jcparam.c' || echo '$(srcdir)/'`jcparam.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcparam.Tpo" "$(DEPDIR)/libturbojpeg_la-jcparam.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcparam.Tpo"; exit 1; fi
#	source='jcparam.c' object='libturbojpeg_la-jcparam.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcparam.lo `test -f 'jcparam.c' || echo '$(srcdir)/'`jcparam.c

libturbojpeg_la-jcphuff.lo: jcphuff.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcphuff.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcphuff.Tpo" -c -o libturbojpeg_la-jcphuff.lo `test -f 'jcphuff.c' || echo '$(srcdir)/'`jcphuff.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcphuff.Tpo" "$(DEPDIR)/libturbojpeg_la-jcphuff.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcphuff.Tpo"; exit 1; fi
#	source='jcphuff.c' object='libturbojpeg_la-jcphuff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcphuff.lo `test -f 'jcphuff.c' || echo '$(srcdir)/'`jcphuff.c

libturbojpeg_la-jcprepct.lo: jcprepct.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcprepct.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcprepct.Tpo" -c -o libturbojpeg_la-jcprepct.lo `test -f 'jcprepct.c' || echo '$(srcdir)/'`jcprepct.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcprepct.Tpo" "$(DEPDIR)/libturbojpeg_la-jcprepct.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcprepct.Tpo"; exit 1; fi
#	source='jcprepct.c' object='libturbojpeg_la-jcprepct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcprepct.lo `test -f 'jcprepct.c' || echo '$(srcdir)/'`jcprepct.c

libturbojpeg_la-jcsample.lo: jcsample.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcsample.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcsample.Tpo" -c -o libturbojpeg_la-jcsample.lo `test -f 'jcsample.c' || echo '$(srcdir)/'`jcsample.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcsample.Tpo" "$(DEPDIR)/libturbojpeg_la-jcsample.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcsample.Tpo"; exit 1; fi
#	source='jcsample.c' object='libturbojpeg_la-jcsample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcsample.lo `test -f 'jcsample.c' || echo '$(srcdir)/'`jcsample.c

libturbojpeg_la-jctrans.lo: jctrans.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jctrans.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jctrans.Tpo" -c -o libturbojpeg_la-jctrans.lo `test -f 'jctrans.c' || echo '$(srcdir)/'`jctrans.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jctrans.Tpo" "$(DEPDIR)/libturbojpeg_la-jctrans.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jctrans.Tpo"; exit 1; fi
#	source='jctrans.c' object='libturbojpeg_la-jctrans.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jctrans.lo `test -f 'jctrans.c' || echo '$(srcdir)/'`jctrans.c

libturbojpeg_la-jdapimin.lo: jdapimin.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdapimin.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdapimin.Tpo" -c -o libturbojpeg_la-jdapimin.lo `test -f 'jdapimin.c' || echo '$(srcdir)/'`jdapimin.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdapimin.Tpo" "$(DEPDIR)/libturbojpeg_la-jdapimin.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdapimin.Tpo"; exit 1; fi
#	source='jdapimin.c' object='libturbojpeg_la-jdapimin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdapimin.lo `test -f 'jdapimin.c' || echo '$(srcdir)/'`jdapimin.c

libturbojpeg_la-jdapistd.lo: jdapistd.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdapistd.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdapistd.Tpo" -c -o libturbojpeg_la-jdapistd.lo `test -f 'jdapistd.c' || echo '$(srcdir)/'`jdapistd.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdapistd.Tpo" "$(DEPDIR)/libturbojpeg_la-jdapistd.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdapistd.Tpo"; exit 1; fi
#	source='jdapistd.c' object='libturbojpeg_la-jdapistd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdapistd.lo `test -f 'jdapistd.c' || echo '$(srcdir)/'`jdapistd.c

libturbojpeg_la-jdatadst.lo: jdatadst.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdatadst.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdatadst.Tpo" -c -o libturbojpeg_la-jdatadst.lo `test -f 'jdatadst.c' || echo '$(srcdir)/'`jdatadst.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdatadst.Tpo" "$(DEPDIR)/libturbojpeg_la-jdatadst.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdatadst.Tpo"; exit 1; fi
#	source='jdatadst.c' object='libturbojpeg_la-jdatadst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdatadst.lo `test -f 'jdatadst.c' || echo '$(srcdir)/'`jdatadst.c

libturbojpeg_la-jdatasrc.lo: jdatasrc.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdatasrc.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdatasrc.Tpo" -c -o libturbojpeg_la-jdatasrc.lo `test -f 'jdatasrc.c' || echo '$(srcdir)/'`jdatasrc.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdatasrc.Tpo" "$(DEPDIR)/libturbojpeg_la-jdatasrc.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdatasrc.Tpo"; exit 1; fi
#	source='jdatasrc.c' object='libturbojpeg_la-jdatasrc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdatasrc.lo `test -f 'jdatasrc.c' || echo '$(srcdir)/'`jdatasrc.c

libturbojpeg_la-jdcoefct.lo: jdcoefct.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdcoefct.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdcoefct.Tpo" -c -o libturbojpeg_la-jdcoefct.lo `test -f 'jdcoefct.c' || echo '$(srcdir)/'`jdcoefct.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdcoefct.Tpo" "$(DEPDIR)/libturbojpeg_la-jdcoefct.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdcoefct.Tpo"; exit 1; fi
#	source='jdcoefct.c' object='libturbojpeg_la-jdcoefct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdcoefct.lo `test -f 'jdcoefct.c' || echo '$(srcdir)/'`jdcoefct.c

libturbojpeg_la-jdcolor.lo: jdcolor.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdcolor.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdcolor.Tpo" -c -o libturbojpeg_la-jdcolor.lo `test -f 'jdcolor.c' || echo '$(srcdir)/'`jdcolor.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdcolor.Tpo" "$(DEPDIR)/libturbojpeg_la-jdcolor.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdcolor.Tpo"; exit 1; fi
#	source='jdcolor.c' object='libturbojpeg_la-jdcolor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdcolor.lo `test -f 'jdcolor.c' || echo '$(srcdir)/'`jdcolor.c

libturbojpeg_la-jddctmgr.lo: jddctmgr.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jddctmgr.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jddctmgr.Tpo" -c -o libturbojpeg_la-jddctmgr.lo `test -f 'jddctmgr.c' || echo '$(srcdir)/'`jddctmgr.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jddctmgr.Tpo" "$(DEPDIR)/libturbojpeg_la-jddctmgr.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jddctmgr.Tpo"; exit 1; fi
#	source='jddctmgr.c' object='libturbojpeg_la-jddctmgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jddctmgr.lo `test -f 'jddctmgr.c' || echo '$(srcdir)/'`jddctmgr.c

libturbojpeg_la-jdhuff.lo: jdhuff.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdhuff.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdhuff.Tpo" -c -o libturbojpeg_la-jdhuff.lo `test -f 'jdhuff.c' || echo '$(srcdir)/'`jdhuff.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdhuff.Tpo" "$(DEPDIR)/libturbojpeg_la-jdhuff.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdhuff.Tpo"; exit 1; fi
#	source='jdhuff.c' object='libturbojpeg_la-jdhuff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdhuff.lo `test -f 'jdhuff.c' || echo '$(srcdir)/'`jdhuff.c

libturbojpeg_la-jdinput.lo: jdinput.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdinput.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdinput.Tpo" -c -o libturbojpeg_la-jdinput.lo `test -f 'jdinput.c' || echo '$(srcdir)/'`jdinput.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdinput.Tpo" "$(DEPDIR)/libturbojpeg_la-jdinput.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdinput.Tpo"; exit 1; fi
#	source='jdinput.c' object='libturbojpeg_la-jdinput.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdinput.lo `test -f 'jdinput.c' || echo '$(srcdir)/'`jdinput.c

libturbojpeg_la-jdmainct.lo: jdmainct.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdmainct.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdmainct.Tpo" -c -o libturbojpeg_la-jdmainct.lo `test -f 'jdmainct.c' || echo '$(srcdir)/'`jdmainct.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdmainct.Tpo" "$(DEPDIR)/libturbojpeg_la-jdmainct.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdmainct.Tpo"; exit 1; fi
#	source='jdmainct.c' object='libturbojpeg_la-jdmainct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdmainct.lo `test -f 'jdmainct.c' || echo '$(srcdir)/'`jdmainct.c

libturbojpeg_la-jdmarker.lo: jdmarker.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdmarker.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdmarker.Tpo" -c -o libturbojpeg_la-jdmarker.lo `test -f 'jdmarker.c' || echo '$(srcdir)/'`jdmarker.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdmarker.Tpo" "$(DEPDIR)/libturbojpeg_la-jdmarker.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdmarker.Tpo"; exit 1; fi
#	source='jdmarker.c' object='libturbojpeg_la-jdmarker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdmarker.lo `test -f 'jdmarker.c' || echo '$(srcdir)/'`jdmarker.c

libturbojpeg_la-jdmaster.lo: jdmaster.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdmaster.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdmaster.Tpo" -c -o libturbojpeg_la-jdmaster.lo `test -f 'jdmaster.c' || echo '$(srcdir)/'`jdmaster.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdmaster.Tpo" "$(DEPDIR)/libturbojpeg_la-jdmaster.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdmaster.Tpo"; exit 1; fi
#	source='jdmaster.c' object='libturbojpeg_la-jdmaster.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdmaster.lo `test -f 'jdmaster.c' || echo '$(srcdir)/'`jdmaster.c

libturbojpeg_la-jdmerge.lo: jdmerge.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdmerge.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdmerge.Tpo" -c -o libturbojpeg_la-jdmerge.lo `test -f 'jdmerge.c' || echo '$(srcdir)/'`jdmerge.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdmerge.Tpo" "$(DEPDIR)/libturbojpeg_la-jdmerge.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdmerge.Tpo"; exit 1; fi
#	source='jdmerge.c' object='libturbojpeg_la-jdmerge.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdmerge.lo `test -f 'jdmerge.c' || echo '$(srcdir)/'`jdmerge.c

libturbojpeg_la-jdphuff.lo: jdphuff.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdphuff.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdphuff.Tpo" -c -o libturbojpeg_la-jdphuff.lo `test -f 'jdphuff.c' || echo '$(srcdir)/'`jdphuff.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdphuff.Tpo" "$(DEPDIR)/libturbojpeg_la-jdphuff.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdphuff.Tpo"; exit 1; fi
#	source='jdphuff.c' object='libturbojpeg_la-jdphuff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdphuff.lo `test -f 'jdphuff.c' || echo '$(srcdir)/'`jdphuff.c

libturbojpeg_la-jdpostct.lo: jdpostct.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdpostct.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdpostct.Tpo" -c -o libturbojpeg_la-jdpostct.lo `test -f 'jdpostct.c' || echo '$(srcdir)/'`jdpostct.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdpostct.Tpo" "$(DEPDIR)/libturbojpeg_la-jdpostct.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdpostct.Tpo"; exit 1; fi
#	source='jdpostct.c' object='libturbojpeg_la-jdpostct.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdpostct.lo `test -f 'jdpostct.c' || echo '$(srcdir)/'`jdpostct.c

libturbojpeg_la-jdsample.lo: jdsample.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdsample.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdsample.Tpo" -c -o libturbojpeg_la-jdsample.lo `test -f 'jdsample.c' || echo '$(srcdir)/'`jdsample.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdsample.Tpo" "$(DEPDIR)/libturbojpeg_la-jdsample.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdsample.Tpo"; exit 1; fi
#	source='jdsample.c' object='libturbojpeg_la-jdsample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdsample.lo `test -f 'jdsample.c' || echo '$(srcdir)/'`jdsample.c

libturbojpeg_la-jdtrans.lo: jdtrans.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdtrans.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdtrans.Tpo" -c -o libturbojpeg_la-jdtrans.lo `test -f 'jdtrans.c' || echo '$(srcdir)/'`jdtrans.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdtrans.Tpo" "$(DEPDIR)/libturbojpeg_la-jdtrans.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdtrans.Tpo"; exit 1; fi
#	source='jdtrans.c' object='libturbojpeg_la-jdtrans.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdtrans.lo `test -f 'jdtrans.c' || echo '$(srcdir)/'`jdtrans.c

libturbojpeg_la-jerror.lo: jerror.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jerror.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jerror.Tpo" -c -o libturbojpeg_la-jerror.lo `test -f 'jerror.c' || echo '$(srcdir)/'`jerror.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jerror.Tpo" "$(DEPDIR)/libturbojpeg_la-jerror.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jerror.Tpo"; exit 1; fi
#	source='jerror.c' object='libturbojpeg_la-jerror.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jerror.lo `test -f 'jerror.c' || echo '$(srcdir)/'`jerror.c

libturbojpeg_la-jfdctflt.lo: jfdctflt.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jfdctflt.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jfdctflt.Tpo" -c -o libturbojpeg_la-jfdctflt.lo `test -f 'jfdctflt.c' || echo '$(srcdir)/'`jfdctflt.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jfdctflt.Tpo" "$(DEPDIR)/libturbojpeg_la-jfdctflt.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jfdctflt.Tpo"; exit 1; fi
#	source='jfdctflt.c' object='libturbojpeg_la-jfdctflt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jfdctflt.lo `test -f 'jfdctflt.c' || echo '$(srcdir)/'`jfdctflt.c

libturbojpeg_la-jfdctfst.lo: jfdctfst.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jfdctfst.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jfdctfst.Tpo" -c -o libturbojpeg_la-jfdctfst.lo `test -f 'jfdctfst.c' || echo '$(srcdir)/'`jfdctfst.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jfdctfst.Tpo" "$(DEPDIR)/libturbojpeg_la-jfdctfst.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jfdctfst.Tpo"; exit 1; fi
#	source='jfdctfst.c' object='libturbojpeg_la-jfdctfst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jfdctfst.lo `test -f 'jfdctfst.c' || echo '$(srcdir)/'`jfdctfst.c

libturbojpeg_la-jfdctint.lo: jfdctint.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jfdctint.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jfdctint.Tpo" -c -o libturbojpeg_la-jfdctint.lo `test -f 'jfdctint.c' || echo '$(srcdir)/'`jfdctint.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jfdctint.Tpo" "$(DEPDIR)/libturbojpeg_la-jfdctint.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jfdctint.Tpo"; exit 1; fi
#	source='jfdctint.c' object='libturbojpeg_la-jfdctint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jfdctint.lo `test -f 'jfdctint.c' || echo '$(srcdir)/'`jfdctint.c

libturbojpeg_la-jidctflt.lo: jidctflt.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jidctflt.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jidctflt.Tpo" -c -o libturbojpeg_la-jidctflt.lo `test -f 'jidctflt.c' || echo '$(srcdir)/'`jidctflt.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jidctflt.Tpo" "$(DEPDIR)/libturbojpeg_la-jidctflt.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jidctflt.Tpo"; exit 1; fi
#	source='jidctflt.c' object='libturbojpeg_la-jidctflt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jidctflt.lo `test -f 'jidctflt.c' || echo '$(srcdir)/'`jidctflt.c

libturbojpeg_la-jidctfst.lo: jidctfst.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jidctfst.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jidctfst.Tpo" -c -o libturbojpeg_la-jidctfst.lo `test -f 'jidctfst.c' || echo '$(srcdir)/'`jidctfst.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jidctfst.Tpo" "$(DEPDIR)/libturbojpeg_la-jidctfst.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jidctfst.Tpo"; exit 1; fi
#	source='jidctfst.c' object='libturbojpeg_la-jidctfst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jidctfst.lo `test -f 'jidctfst.c' || echo '$(srcdir)/'`jidctfst.c

libturbojpeg_la-jidctint.lo: jidctint.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jidctint.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jidctint.Tpo" -c -o libturbojpeg_la-jidctint.lo `test -f 'jidctint.c' || echo '$(srcdir)/'`jidctint.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jidctint.Tpo" "$(DEPDIR)/libturbojpeg_la-jidctint.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jidctint.Tpo"; exit 1; fi
#	source='jidctint.c' object='libturbojpeg_la-jidctint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jidctint.lo `test -f 'jidctint.c' || echo '$(srcdir)/'`jidctint.c

libturbojpeg_la-jidctred.lo: jidctred.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jidctred.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jidctred.Tpo" -c -o libturbojpeg_la-jidctred.lo `test -f 'jidctred.c' || echo '$(srcdir)/'`jidctred.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jidctred.Tpo" "$(DEPDIR)/libturbojpeg_la-jidctred.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jidctred.Tpo"; exit 1; fi
#	source='jidctred.c' object='libturbojpeg_la-jidctred.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jidctred.lo `test -f 'jidctred.c' || echo '$(srcdir)/'`jidctred.c

libturbojpeg_la-jquant1.lo: jquant1.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jquant1.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jquant1.Tpo" -c -o libturbojpeg_la-jquant1.lo `test -f 'jquant1.c' || echo '$(srcdir)/'`jquant1.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jquant1.Tpo" "$(DEPDIR)/libturbojpeg_la-jquant1.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jquant1.Tpo"; exit 1; fi
#	source='jquant1.c' object='libturbojpeg_la-jquant1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jquant1.lo `test -f 'jquant1.c' || echo '$(srcdir)/'`jquant1.c

libturbojpeg_la-jquant2.lo: jquant2.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jquant2.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jquant2.Tpo" -c -o libturbojpeg_la-jquant2.lo `test -f 'jquant2.c' || echo '$(srcdir)/'`jquant2.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jquant2.Tpo" "$(DEPDIR)/libturbojpeg_la-jquant2.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jquant2.Tpo"; exit 1; fi
#	source='jquant2.c' object='libturbojpeg_la-jquant2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jquant2.lo `test -f 'jquant2.c' || echo '$(srcdir)/'`jquant2.c

libturbojpeg_la-jutils.lo: jutils.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jutils.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jutils.Tpo" -c -o libturbojpeg_la-jutils.lo `test -f 'jutils.c' || echo '$(srcdir)/'`jutils.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jutils.Tpo" "$(DEPDIR)/libturbojpeg_la-jutils.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jutils.Tpo"; exit 1; fi
#	source='jutils.c' object='libturbojpeg_la-jutils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jutils.lo `test -f 'jutils.c' || echo '$(srcdir)/'`jutils.c

libturbojpeg_la-jmemmgr.lo: jmemmgr.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jmemmgr.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jmemmgr.Tpo" -c -o libturbojpeg_la-jmemmgr.lo `test -f 'jmemmgr.c' || echo '$(srcdir)/'`jmemmgr.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jmemmgr.Tpo" "$(DEPDIR)/libturbojpeg_la-jmemmgr.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jmemmgr.Tpo"; exit 1; fi
#	source='jmemmgr.c' object='libturbojpeg_la-jmemmgr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jmemmgr.lo `test -f 'jmemmgr.c' || echo '$(srcdir)/'`jmemmgr.c

libturbojpeg_la-jmemnobs.lo: jmemnobs.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jmemnobs.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jmemnobs.Tpo" -c -o libturbojpeg_la-jmemnobs.lo `test -f 'jmemnobs.c' || echo '$(srcdir)/'`jmemnobs.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jmemnobs.Tpo" "$(DEPDIR)/libturbojpeg_la-jmemnobs.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jmemnobs.Tpo"; exit 1; fi
#	source='jmemnobs.c' object='libturbojpeg_la-jmemnobs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jmemnobs.lo `test -f 'jmemnobs.c' || echo '$(srcdir)/'`jmemnobs.c

libturbojpeg_la-jaricom.lo: jaricom.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jaricom.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jaricom.Tpo" -c -o libturbojpeg_la-jaricom.lo `test -f 'jaricom.c' || echo '$(srcdir)/'`jaricom.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jaricom.Tpo" "$(DEPDIR)/libturbojpeg_la-jaricom.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jaricom.Tpo"; exit 1; fi
#	source='jaricom.c' object='libturbojpeg_la-jaricom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jaricom.lo `test -f 'jaricom.c' || echo '$(srcdir)/'`jaricom.c

libturbojpeg_la-jcarith.lo: jcarith.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jcarith.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jcarith.Tpo" -c -o libturbojpeg_la-jcarith.lo `test -f 'jcarith.c' || echo '$(srcdir)/'`jcarith.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jcarith.Tpo" "$(DEPDIR)/libturbojpeg_la-jcarith.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jcarith.Tpo"; exit 1; fi
#	source='jcarith.c' object='libturbojpeg_la-jcarith.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jcarith.lo `test -f 'jcarith.c' || echo '$(srcdir)/'`jcarith.c

libturbojpeg_la-jdarith.lo: jdarith.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdarith.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdarith.Tpo" -c -o libturbojpeg_la-jdarith.lo `test -f 'jdarith.c' || echo '$(srcdir)/'`jdarith.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdarith.Tpo" "$(DEPDIR)/libturbojpeg_la-jdarith.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdarith.Tpo"; exit 1; fi
#	source='jdarith.c' object='libturbojpeg_la-jdarith.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdarith.lo `test -f 'jdarith.c' || echo '$(srcdir)/'`jdarith.c

libturbojpeg_la-jsimd_none.lo: jsimd_none.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jsimd_none.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jsimd_none.Tpo" -c -o libturbojpeg_la-jsimd_none.lo `test -f 'jsimd_none.c' || echo '$(srcdir)/'`jsimd_none.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jsimd_none.Tpo" "$(DEPDIR)/libturbojpeg_la-jsimd_none.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jsimd_none.Tpo"; exit 1; fi
#	source='jsimd_none.c' object='libturbojpeg_la-jsimd_none.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jsimd_none.lo `test -f 'jsimd_none.c' || echo '$(srcdir)/'`jsimd_none.c

libturbojpeg_la-turbojpeg.lo: turbojpeg.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-turbojpeg.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-turbojpeg.Tpo" -c -o libturbojpeg_la-turbojpeg.lo `test -f 'turbojpeg.c' || echo '$(srcdir)/'`turbojpeg.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-turbojpeg.Tpo" "$(DEPDIR)/libturbojpeg_la-turbojpeg.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-turbojpeg.Tpo"; exit 1; fi
#	source='turbojpeg.c' object='libturbojpeg_la-turbojpeg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-turbojpeg.lo `test -f 'turbojpeg.c' || echo '$(srcdir)/'`turbojpeg.c

libturbojpeg_la-transupp.lo: transupp.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-transupp.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-transupp.Tpo" -c -o libturbojpeg_la-transupp.lo `test -f 'transupp.c' || echo '$(srcdir)/'`transupp.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-transupp.Tpo" "$(DEPDIR)/libturbojpeg_la-transupp.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-transupp.Tpo"; exit 1; fi
#	source='transupp.c' object='libturbojpeg_la-transupp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-transupp.lo `test -f 'transupp.c' || echo '$(srcdir)/'`transupp.c

libturbojpeg_la-jdatadst-tj.lo: jdatadst-tj.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdatadst-tj.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdatadst-tj.Tpo" -c -o libturbojpeg_la-jdatadst-tj.lo `test -f 'jdatadst-tj.c' || echo '$(srcdir)/'`jdatadst-tj.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdatadst-tj.Tpo" "$(DEPDIR)/libturbojpeg_la-jdatadst-tj.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdatadst-tj.Tpo"; exit 1; fi
#	source='jdatadst-tj.c' object='libturbojpeg_la-jdatadst-tj.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdatadst-tj.lo `test -f 'jdatadst-tj.c' || echo '$(srcdir)/'`jdatadst-tj.c

libturbojpeg_la-jdatasrc-tj.lo: jdatasrc-tj.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-jdatasrc-tj.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-jdatasrc-tj.Tpo" -c -o libturbojpeg_la-jdatasrc-tj.lo `test -f 'jdatasrc-tj.c' || echo '$(srcdir)/'`jdatasrc-tj.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-jdatasrc-tj.Tpo" "$(DEPDIR)/libturbojpeg_la-jdatasrc-tj.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-jdatasrc-tj.Tpo"; exit 1; fi
#	source='jdatasrc-tj.c' object='libturbojpeg_la-jdatasrc-tj.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-jdatasrc-tj.lo `test -f 'jdatasrc-tj.c' || echo '$(srcdir)/'`jdatasrc-tj.c

libturbojpeg_la-turbojpeg-jni.lo: turbojpeg-jni.c
	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -MT libturbojpeg_la-turbojpeg-jni.lo -MD -MP -MF "$(DEPDIR)/libturbojpeg_la-turbojpeg-jni.Tpo" -c -o libturbojpeg_la-turbojpeg-jni.lo `test -f 'turbojpeg-jni.c' || echo '$(srcdir)/'`turbojpeg-jni.c; \
	then mv -f "$(DEPDIR)/libturbojpeg_la-turbojpeg-jni.Tpo" "$(DEPDIR)/libturbojpeg_la-turbojpeg-jni.Plo"; else rm -f "$(DEPDIR)/libturbojpeg_la-turbojpeg-jni.Tpo"; exit 1; fi
#	source='turbojpeg-jni.c' object='libturbojpeg_la-turbojpeg-jni.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libturbojpeg_la_CFLAGS) $(CFLAGS) -c -o libturbojpeg_la-turbojpeg-jni.lo `test -f 'turbojpeg-jni.c' || echo '$(srcdir)/'`turbojpeg-jni.c

cjpeg-cdjpeg.o: cdjpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-cdjpeg.o -MD -MP -MF "$(DEPDIR)/cjpeg-cdjpeg.Tpo" -c -o cjpeg-cdjpeg.o `test -f 'cdjpeg.c' || echo '$(srcdir)/'`cdjpeg.c; \
	then mv -f "$(DEPDIR)/cjpeg-cdjpeg.Tpo" "$(DEPDIR)/cjpeg-cdjpeg.Po"; else rm -f "$(DEPDIR)/cjpeg-cdjpeg.Tpo"; exit 1; fi
#	source='cdjpeg.c' object='cjpeg-cdjpeg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-cdjpeg.o `test -f 'cdjpeg.c' || echo '$(srcdir)/'`cdjpeg.c

cjpeg-cdjpeg.obj: cdjpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-cdjpeg.obj -MD -MP -MF "$(DEPDIR)/cjpeg-cdjpeg.Tpo" -c -o cjpeg-cdjpeg.obj `if test -f 'cdjpeg.c'; then $(CYGPATH_W) 'cdjpeg.c'; else $(CYGPATH_W) '$(srcdir)/cdjpeg.c'; fi`; \
	then mv -f "$(DEPDIR)/cjpeg-cdjpeg.Tpo" "$(DEPDIR)/cjpeg-cdjpeg.Po"; else rm -f "$(DEPDIR)/cjpeg-cdjpeg.Tpo"; exit 1; fi
#	source='cdjpeg.c' object='cjpeg-cdjpeg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-cdjpeg.obj `if test -f 'cdjpeg.c'; then $(CYGPATH_W) 'cdjpeg.c'; else $(CYGPATH_W) '$(srcdir)/cdjpeg.c'; fi`

cjpeg-cjpeg.o: cjpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-cjpeg.o -MD -MP -MF "$(DEPDIR)/cjpeg-cjpeg.Tpo" -c -o cjpeg-cjpeg.o `test -f 'cjpeg.c' || echo '$(srcdir)/'`cjpeg.c; \
	then mv -f "$(DEPDIR)/cjpeg-cjpeg.Tpo" "$(DEPDIR)/cjpeg-cjpeg.Po"; else rm -f "$(DEPDIR)/cjpeg-cjpeg.Tpo"; exit 1; fi
#	source='cjpeg.c' object='cjpeg-cjpeg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-cjpeg.o `test -f 'cjpeg.c' || echo '$(srcdir)/'`cjpeg.c

cjpeg-cjpeg.obj: cjpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-cjpeg.obj -MD -MP -MF "$(DEPDIR)/cjpeg-cjpeg.Tpo" -c -o cjpeg-cjpeg.obj `if test -f 'cjpeg.c'; then $(CYGPATH_W) 'cjpeg.c'; else $(CYGPATH_W) '$(srcdir)/cjpeg.c'; fi`; \
	then mv -f "$(DEPDIR)/cjpeg-cjpeg.Tpo" "$(DEPDIR)/cjpeg-cjpeg.Po"; else rm -f "$(DEPDIR)/cjpeg-cjpeg.Tpo"; exit 1; fi
#	source='cjpeg.c' object='cjpeg-cjpeg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-cjpeg.obj `if test -f 'cjpeg.c'; then $(CYGPATH_W) 'cjpeg.c'; else $(CYGPATH_W) '$(srcdir)/cjpeg.c'; fi`

cjpeg-rdbmp.o: rdbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdbmp.o -MD -MP -MF "$(DEPDIR)/cjpeg-rdbmp.Tpo" -c -o cjpeg-rdbmp.o `test -f 'rdbmp.c' || echo '$(srcdir)/'`rdbmp.c; \
	then mv -f "$(DEPDIR)/cjpeg-rdbmp.Tpo" "$(DEPDIR)/cjpeg-rdbmp.Po"; else rm -f "$(DEPDIR)/cjpeg-rdbmp.Tpo"; exit 1; fi
#	source='rdbmp.c' object='cjpeg-rdbmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdbmp.o `test -f 'rdbmp.c' || echo '$(srcdir)/'`rdbmp.c

cjpeg-rdbmp.obj: rdbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdbmp.obj -MD -MP -MF "$(DEPDIR)/cjpeg-rdbmp.Tpo" -c -o cjpeg-rdbmp.obj `if test -f 'rdbmp.c'; then $(CYGPATH_W) 'rdbmp.c'; else $(CYGPATH_W) '$(srcdir)/rdbmp.c'; fi`; \
	then mv -f "$(DEPDIR)/cjpeg-rdbmp.Tpo" "$(DEPDIR)/cjpeg-rdbmp.Po"; else rm -f "$(DEPDIR)/cjpeg-rdbmp.Tpo"; exit 1; fi
#	source='rdbmp.c' object='cjpeg-rdbmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdbmp.obj `if test -f 'rdbmp.c'; then $(CYGPATH_W) 'rdbmp.c'; else $(CYGPATH_W) '$(srcdir)/rdbmp.c'; fi`

cjpeg-rdgif.o: rdgif.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdgif.o -MD -MP -MF "$(DEPDIR)/cjpeg-rdgif.Tpo" -c -o cjpeg-rdgif.o `test -f 'rdgif.c' || echo '$(srcdir)/'`rdgif.c; \
	then mv -f "$(DEPDIR)/cjpeg-rdgif.Tpo" "$(DEPDIR)/cjpeg-rdgif.Po"; else rm -f "$(DEPDIR)/cjpeg-rdgif.Tpo"; exit 1; fi
#	source='rdgif.c' object='cjpeg-rdgif.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdgif.o `test -f 'rdgif.c' || echo '$(srcdir)/'`rdgif.c

cjpeg-rdgif.obj: rdgif.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdgif.obj -MD -MP -MF "$(DEPDIR)/cjpeg-rdgif.Tpo" -c -o cjpeg-rdgif.obj `if test -f 'rdgif.c'; then $(CYGPATH_W) 'rdgif.c'; else $(CYGPATH_W) '$(srcdir)/rdgif.c'; fi`; \
	then mv -f "$(DEPDIR)/cjpeg-rdgif.Tpo" "$(DEPDIR)/cjpeg-rdgif.Po"; else rm -f "$(DEPDIR)/cjpeg-rdgif.Tpo"; exit 1; fi
#	source='rdgif.c' object='cjpeg-rdgif.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdgif.obj `if test -f 'rdgif.c'; then $(CYGPATH_W) 'rdgif.c'; else $(CYGPATH_W) '$(srcdir)/rdgif.c'; fi`

cjpeg-rdppm.o: rdppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdppm.o -MD -MP -MF "$(DEPDIR)/cjpeg-rdppm.Tpo" -c -o cjpeg-rdppm.o `test -f 'rdppm.c' || echo '$(srcdir)/'`rdppm.c; \
	then mv -f "$(DEPDIR)/cjpeg-rdppm.Tpo" "$(DEPDIR)/cjpeg-rdppm.Po"; else rm -f "$(DEPDIR)/cjpeg-rdppm.Tpo"; exit 1; fi
#	source='rdppm.c' object='cjpeg-rdppm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdppm.o `test -f 'rdppm.c' || echo '$(srcdir)/'`rdppm.c

cjpeg-rdppm.obj: rdppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdppm.obj -MD -MP -MF "$(DEPDIR)/cjpeg-rdppm.Tpo" -c -o cjpeg-rdppm.obj `if test -f 'rdppm.c'; then $(CYGPATH_W) 'rdppm.c'; else $(CYGPATH_W) '$(srcdir)/rdppm.c'; fi`; \
	then mv -f "$(DEPDIR)/cjpeg-rdppm.Tpo" "$(DEPDIR)/cjpeg-rdppm.Po"; else rm -f "$(DEPDIR)/cjpeg-rdppm.Tpo"; exit 1; fi
#	source='rdppm.c' object='cjpeg-rdppm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdppm.obj `if test -f 'rdppm.c'; then $(CYGPATH_W) 'rdppm.c'; else $(CYGPATH_W) '$(srcdir)/rdppm.c'; fi`

cjpeg-rdswitch.o: rdswitch.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdswitch.o -MD -MP -MF "$(DEPDIR)/cjpeg-rdswitch.Tpo" -c -o cjpeg-rdswitch.o `test -f 'rdswitch.c' || echo '$(srcdir)/'`rdswitch.c; \
	then mv -f "$(DEPDIR)/cjpeg-rdswitch.Tpo" "$(DEPDIR)/cjpeg-rdswitch.Po"; else rm -f "$(DEPDIR)/cjpeg-rdswitch.Tpo"; exit 1; fi
#	source='rdswitch.c' object='cjpeg-rdswitch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdswitch.o `test -f 'rdswitch.c' || echo '$(srcdir)/'`rdswitch.c

cjpeg-rdswitch.obj: rdswitch.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdswitch.obj -MD -MP -MF "$(DEPDIR)/cjpeg-rdswitch.Tpo" -c -o cjpeg-rdswitch.obj `if test -f 'rdswitch.c'; then $(CYGPATH_W) 'rdswitch.c'; else $(CYGPATH_W) '$(srcdir)/rdswitch.c'; fi`; \
	then mv -f "$(DEPDIR)/cjpeg-rdswitch.Tpo" "$(DEPDIR)/cjpeg-rdswitch.Po"; else rm -f "$(DEPDIR)/cjpeg-rdswitch.Tpo"; exit 1; fi
#	source='rdswitch.c' object='cjpeg-rdswitch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdswitch.obj `if test -f 'rdswitch.c'; then $(CYGPATH_W) 'rdswitch.c'; else $(CYGPATH_W) '$(srcdir)/rdswitch.c'; fi`

cjpeg-rdtarga.o: rdtarga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdtarga.o -MD -MP -MF "$(DEPDIR)/cjpeg-rdtarga.Tpo" -c -o cjpeg-rdtarga.o `test -f 'rdtarga.c' || echo '$(srcdir)/'`rdtarga.c; \
	then mv -f "$(DEPDIR)/cjpeg-rdtarga.Tpo" "$(DEPDIR)/cjpeg-rdtarga.Po"; else rm -f "$(DEPDIR)/cjpeg-rdtarga.Tpo"; exit 1; fi
#	source='rdtarga.c' object='cjpeg-rdtarga.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdtarga.o `test -f 'rdtarga.c' || echo '$(srcdir)/'`rdtarga.c

cjpeg-rdtarga.obj: rdtarga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -MT cjpeg-rdtarga.obj -MD -MP -MF "$(DEPDIR)/cjpeg-rdtarga.Tpo" -c -o cjpeg-rdtarga.obj `if test -f 'rdtarga.c'; then $(CYGPATH_W) 'rdtarga.c'; else $(CYGPATH_W) '$(srcdir)/rdtarga.c'; fi`; \
	then mv -f "$(DEPDIR)/cjpeg-rdtarga.Tpo" "$(DEPDIR)/cjpeg-rdtarga.Po"; else rm -f "$(DEPDIR)/cjpeg-rdtarga.Tpo"; exit 1; fi
#	source='rdtarga.c' object='cjpeg-rdtarga.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cjpeg_CFLAGS) $(CFLAGS) -c -o cjpeg-rdtarga.obj `if test -f 'rdtarga.c'; then $(CYGPATH_W) 'rdtarga.c'; else $(CYGPATH_W) '$(srcdir)/rdtarga.c'; fi`

djpeg-cdjpeg.o: cdjpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-cdjpeg.o -MD -MP -MF "$(DEPDIR)/djpeg-cdjpeg.Tpo" -c -o djpeg-cdjpeg.o `test -f 'cdjpeg.c' || echo '$(srcdir)/'`cdjpeg.c; \
	then mv -f "$(DEPDIR)/djpeg-cdjpeg.Tpo" "$(DEPDIR)/djpeg-cdjpeg.Po"; else rm -f "$(DEPDIR)/djpeg-cdjpeg.Tpo"; exit 1; fi
#	source='cdjpeg.c' object='djpeg-cdjpeg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-cdjpeg.o `test -f 'cdjpeg.c' || echo '$(srcdir)/'`cdjpeg.c

djpeg-cdjpeg.obj: cdjpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-cdjpeg.obj -MD -MP -MF "$(DEPDIR)/djpeg-cdjpeg.Tpo" -c -o djpeg-cdjpeg.obj `if test -f 'cdjpeg.c'; then $(CYGPATH_W) 'cdjpeg.c'; else $(CYGPATH_W) '$(srcdir)/cdjpeg.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-cdjpeg.Tpo" "$(DEPDIR)/djpeg-cdjpeg.Po"; else rm -f "$(DEPDIR)/djpeg-cdjpeg.Tpo"; exit 1; fi
#	source='cdjpeg.c' object='djpeg-cdjpeg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-cdjpeg.obj `if test -f 'cdjpeg.c'; then $(CYGPATH_W) 'cdjpeg.c'; else $(CYGPATH_W) '$(srcdir)/cdjpeg.c'; fi`

djpeg-djpeg.o: djpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-djpeg.o -MD -MP -MF "$(DEPDIR)/djpeg-djpeg.Tpo" -c -o djpeg-djpeg.o `test -f 'djpeg.c' || echo '$(srcdir)/'`djpeg.c; \
	then mv -f "$(DEPDIR)/djpeg-djpeg.Tpo" "$(DEPDIR)/djpeg-djpeg.Po"; else rm -f "$(DEPDIR)/djpeg-djpeg.Tpo"; exit 1; fi
#	source='djpeg.c' object='djpeg-djpeg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-djpeg.o `test -f 'djpeg.c' || echo '$(srcdir)/'`djpeg.c

djpeg-djpeg.obj: djpeg.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-djpeg.obj -MD -MP -MF "$(DEPDIR)/djpeg-djpeg.Tpo" -c -o djpeg-djpeg.obj `if test -f 'djpeg.c'; then $(CYGPATH_W) 'djpeg.c'; else $(CYGPATH_W) '$(srcdir)/djpeg.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-djpeg.Tpo" "$(DEPDIR)/djpeg-djpeg.Po"; else rm -f "$(DEPDIR)/djpeg-djpeg.Tpo"; exit 1; fi
#	source='djpeg.c' object='djpeg-djpeg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-djpeg.obj `if test -f 'djpeg.c'; then $(CYGPATH_W) 'djpeg.c'; else $(CYGPATH_W) '$(srcdir)/djpeg.c'; fi`

djpeg-rdcolmap.o: rdcolmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-rdcolmap.o -MD -MP -MF "$(DEPDIR)/djpeg-rdcolmap.Tpo" -c -o djpeg-rdcolmap.o `test -f 'rdcolmap.c' || echo '$(srcdir)/'`rdcolmap.c; \
	then mv -f "$(DEPDIR)/djpeg-rdcolmap.Tpo" "$(DEPDIR)/djpeg-rdcolmap.Po"; else rm -f "$(DEPDIR)/djpeg-rdcolmap.Tpo"; exit 1; fi
#	source='rdcolmap.c' object='djpeg-rdcolmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-rdcolmap.o `test -f 'rdcolmap.c' || echo '$(srcdir)/'`rdcolmap.c

djpeg-rdcolmap.obj: rdcolmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-rdcolmap.obj -MD -MP -MF "$(DEPDIR)/djpeg-rdcolmap.Tpo" -c -o djpeg-rdcolmap.obj `if test -f 'rdcolmap.c'; then $(CYGPATH_W) 'rdcolmap.c'; else $(CYGPATH_W) '$(srcdir)/rdcolmap.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-rdcolmap.Tpo" "$(DEPDIR)/djpeg-rdcolmap.Po"; else rm -f "$(DEPDIR)/djpeg-rdcolmap.Tpo"; exit 1; fi
#	source='rdcolmap.c' object='djpeg-rdcolmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-rdcolmap.obj `if test -f 'rdcolmap.c'; then $(CYGPATH_W) 'rdcolmap.c'; else $(CYGPATH_W) '$(srcdir)/rdcolmap.c'; fi`

djpeg-rdswitch.o: rdswitch.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-rdswitch.o -MD -MP -MF "$(DEPDIR)/djpeg-rdswitch.Tpo" -c -o djpeg-rdswitch.o `test -f 'rdswitch.c' || echo '$(srcdir)/'`rdswitch.c; \
	then mv -f "$(DEPDIR)/djpeg-rdswitch.Tpo" "$(DEPDIR)/djpeg-rdswitch.Po"; else rm -f "$(DEPDIR)/djpeg-rdswitch.Tpo"; exit 1; fi
#	source='rdswitch.c' object='djpeg-rdswitch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-rdswitch.o `test -f 'rdswitch.c' || echo '$(srcdir)/'`rdswitch.c

djpeg-rdswitch.obj: rdswitch.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-rdswitch.obj -MD -MP -MF "$(DEPDIR)/djpeg-rdswitch.Tpo" -c -o djpeg-rdswitch.obj `if test -f 'rdswitch.c'; then $(CYGPATH_W) 'rdswitch.c'; else $(CYGPATH_W) '$(srcdir)/rdswitch.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-rdswitch.Tpo" "$(DEPDIR)/djpeg-rdswitch.Po"; else rm -f "$(DEPDIR)/djpeg-rdswitch.Tpo"; exit 1; fi
#	source='rdswitch.c' object='djpeg-rdswitch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-rdswitch.obj `if test -f 'rdswitch.c'; then $(CYGPATH_W) 'rdswitch.c'; else $(CYGPATH_W) '$(srcdir)/rdswitch.c'; fi`

djpeg-wrbmp.o: wrbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrbmp.o -MD -MP -MF "$(DEPDIR)/djpeg-wrbmp.Tpo" -c -o djpeg-wrbmp.o `test -f 'wrbmp.c' || echo '$(srcdir)/'`wrbmp.c; \
	then mv -f "$(DEPDIR)/djpeg-wrbmp.Tpo" "$(DEPDIR)/djpeg-wrbmp.Po"; else rm -f "$(DEPDIR)/djpeg-wrbmp.Tpo"; exit 1; fi
#	source='wrbmp.c' object='djpeg-wrbmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrbmp.o `test -f 'wrbmp.c' || echo '$(srcdir)/'`wrbmp.c

djpeg-wrbmp.obj: wrbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrbmp.obj -MD -MP -MF "$(DEPDIR)/djpeg-wrbmp.Tpo" -c -o djpeg-wrbmp.obj `if test -f 'wrbmp.c'; then $(CYGPATH_W) 'wrbmp.c'; else $(CYGPATH_W) '$(srcdir)/wrbmp.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-wrbmp.Tpo" "$(DEPDIR)/djpeg-wrbmp.Po"; else rm -f "$(DEPDIR)/djpeg-wrbmp.Tpo"; exit 1; fi
#	source='wrbmp.c' object='djpeg-wrbmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrbmp.obj `if test -f 'wrbmp.c'; then $(CYGPATH_W) 'wrbmp.c'; else $(CYGPATH_W) '$(srcdir)/wrbmp.c'; fi`

djpeg-wrgif.o: wrgif.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrgif.o -MD -MP -MF "$(DEPDIR)/djpeg-wrgif.Tpo" -c -o djpeg-wrgif.o `test -f 'wrgif.c' || echo '$(srcdir)/'`wrgif.c; \
	then mv -f "$(DEPDIR)/djpeg-wrgif.Tpo" "$(DEPDIR)/djpeg-wrgif.Po"; else rm -f "$(DEPDIR)/djpeg-wrgif.Tpo"; exit 1; fi
#	source='wrgif.c' object='djpeg-wrgif.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrgif.o `test -f 'wrgif.c' || echo '$(srcdir)/'`wrgif.c

djpeg-wrgif.obj: wrgif.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrgif.obj -MD -MP -MF "$(DEPDIR)/djpeg-wrgif.Tpo" -c -o djpeg-wrgif.obj `if test -f 'wrgif.c'; then $(CYGPATH_W) 'wrgif.c'; else $(CYGPATH_W) '$(srcdir)/wrgif.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-wrgif.Tpo" "$(DEPDIR)/djpeg-wrgif.Po"; else rm -f "$(DEPDIR)/djpeg-wrgif.Tpo"; exit 1; fi
#	source='wrgif.c' object='djpeg-wrgif.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrgif.obj `if test -f 'wrgif.c'; then $(CYGPATH_W) 'wrgif.c'; else $(CYGPATH_W) '$(srcdir)/wrgif.c'; fi`

djpeg-wrppm.o: wrppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrppm.o -MD -MP -MF "$(DEPDIR)/djpeg-wrppm.Tpo" -c -o djpeg-wrppm.o `test -f 'wrppm.c' || echo '$(srcdir)/'`wrppm.c; \
	then mv -f "$(DEPDIR)/djpeg-wrppm.Tpo" "$(DEPDIR)/djpeg-wrppm.Po"; else rm -f "$(DEPDIR)/djpeg-wrppm.Tpo"; exit 1; fi
#	source='wrppm.c' object='djpeg-wrppm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrppm.o `test -f 'wrppm.c' || echo '$(srcdir)/'`wrppm.c

djpeg-wrppm.obj: wrppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrppm.obj -MD -MP -MF "$(DEPDIR)/djpeg-wrppm.Tpo" -c -o djpeg-wrppm.obj `if test -f 'wrppm.c'; then $(CYGPATH_W) 'wrppm.c'; else $(CYGPATH_W) '$(srcdir)/wrppm.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-wrppm.Tpo" "$(DEPDIR)/djpeg-wrppm.Po"; else rm -f "$(DEPDIR)/djpeg-wrppm.Tpo"; exit 1; fi
#	source='wrppm.c' object='djpeg-wrppm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrppm.obj `if test -f 'wrppm.c'; then $(CYGPATH_W) 'wrppm.c'; else $(CYGPATH_W) '$(srcdir)/wrppm.c'; fi`

djpeg-wrtarga.o: wrtarga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrtarga.o -MD -MP -MF "$(DEPDIR)/djpeg-wrtarga.Tpo" -c -o djpeg-wrtarga.o `test -f 'wrtarga.c' || echo '$(srcdir)/'`wrtarga.c; \
	then mv -f "$(DEPDIR)/djpeg-wrtarga.Tpo" "$(DEPDIR)/djpeg-wrtarga.Po"; else rm -f "$(DEPDIR)/djpeg-wrtarga.Tpo"; exit 1; fi
#	source='wrtarga.c' object='djpeg-wrtarga.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrtarga.o `test -f 'wrtarga.c' || echo '$(srcdir)/'`wrtarga.c

djpeg-wrtarga.obj: wrtarga.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -MT djpeg-wrtarga.obj -MD -MP -MF "$(DEPDIR)/djpeg-wrtarga.Tpo" -c -o djpeg-wrtarga.obj `if test -f 'wrtarga.c'; then $(CYGPATH_W) 'wrtarga.c'; else $(CYGPATH_W) '$(srcdir)/wrtarga.c'; fi`; \
	then mv -f "$(DEPDIR)/djpeg-wrtarga.Tpo" "$(DEPDIR)/djpeg-wrtarga.Po"; else rm -f "$(DEPDIR)/djpeg-wrtarga.Tpo"; exit 1; fi
#	source='wrtarga.c' object='djpeg-wrtarga.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(djpeg_CFLAGS) $(CFLAGS) -c -o djpeg-wrtarga.obj `if test -f 'wrtarga.c'; then $(CYGPATH_W) 'wrtarga.c'; else $(CYGPATH_W) '$(srcdir)/wrtarga.c'; fi`

tjbench-tjbench.o: tjbench.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-tjbench.o -MD -MP -MF "$(DEPDIR)/tjbench-tjbench.Tpo" -c -o tjbench-tjbench.o `test -f 'tjbench.c' || echo '$(srcdir)/'`tjbench.c; \
	then mv -f "$(DEPDIR)/tjbench-tjbench.Tpo" "$(DEPDIR)/tjbench-tjbench.Po"; else rm -f "$(DEPDIR)/tjbench-tjbench.Tpo"; exit 1; fi
#	source='tjbench.c' object='tjbench-tjbench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-tjbench.o `test -f 'tjbench.c' || echo '$(srcdir)/'`tjbench.c

tjbench-tjbench.obj: tjbench.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-tjbench.obj -MD -MP -MF "$(DEPDIR)/tjbench-tjbench.Tpo" -c -o tjbench-tjbench.obj `if test -f 'tjbench.c'; then $(CYGPATH_W) 'tjbench.c'; else $(CYGPATH_W) '$(srcdir)/tjbench.c'; fi`; \
	then mv -f "$(DEPDIR)/tjbench-tjbench.Tpo" "$(DEPDIR)/tjbench-tjbench.Po"; else rm -f "$(DEPDIR)/tjbench-tjbench.Tpo"; exit 1; fi
#	source='tjbench.c' object='tjbench-tjbench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-tjbench.obj `if test -f 'tjbench.c'; then $(CYGPATH_W) 'tjbench.c'; else $(CYGPATH_W) '$(srcdir)/tjbench.c'; fi`

tjbench-bmp.o: bmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-bmp.o -MD -MP -MF "$(DEPDIR)/tjbench-bmp.Tpo" -c -o tjbench-bmp.o `test -f 'bmp.c' || echo '$(srcdir)/'`bmp.c; \
	then mv -f "$(DEPDIR)/tjbench-bmp.Tpo" "$(DEPDIR)/tjbench-bmp.Po"; else rm -f "$(DEPDIR)/tjbench-bmp.Tpo"; exit 1; fi
#	source='bmp.c' object='tjbench-bmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-bmp.o `test -f 'bmp.c' || echo '$(srcdir)/'`bmp.c

tjbench-bmp.obj: bmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-bmp.obj -MD -MP -MF "$(DEPDIR)/tjbench-bmp.Tpo" -c -o tjbench-bmp.obj `if test -f 'bmp.c'; then $(CYGPATH_W) 'bmp.c'; else $(CYGPATH_W) '$(srcdir)/bmp.c'; fi`; \
	then mv -f "$(DEPDIR)/tjbench-bmp.Tpo" "$(DEPDIR)/tjbench-bmp.Po"; else rm -f "$(DEPDIR)/tjbench-bmp.Tpo"; exit 1; fi
#	source='bmp.c' object='tjbench-bmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-bmp.obj `if test -f 'bmp.c'; then $(CYGPATH_W) 'bmp.c'; else $(CYGPATH_W) '$(srcdir)/bmp.c'; fi`

tjbench-tjutil.o: tjutil.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-tjutil.o -MD -MP -MF "$(DEPDIR)/tjbench-tjutil.Tpo" -c -o tjbench-tjutil.o `test -f 'tjutil.c' || echo '$(srcdir)/'`tjutil.c; \
	then mv -f "$(DEPDIR)/tjbench-tjutil.Tpo" "$(DEPDIR)/tjbench-tjutil.Po"; else rm -f "$(DEPDIR)/tjbench-tjutil.Tpo"; exit 1; fi
#	source='tjutil.c' object='tjbench-tjutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-tjutil.o `test -f 'tjutil.c' || echo '$(srcdir)/'`tjutil.c

tjbench-tjutil.obj: tjutil.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-tjutil.obj -MD -MP -MF "$(DEPDIR)/tjbench-tjutil.Tpo" -c -o tjbench-tjutil.obj `if test -f 'tjutil.c'; then $(CYGPATH_W) 'tjutil.c'; else $(CYGPATH_W) '$(srcdir)/tjutil.c'; fi`; \
	then mv -f "$(DEPDIR)/tjbench-tjutil.Tpo" "$(DEPDIR)/tjbench-tjutil.Po"; else rm -f "$(DEPDIR)/tjbench-tjutil.Tpo"; exit 1; fi
#	source='tjutil.c' object='tjbench-tjutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-tjutil.obj `if test -f 'tjutil.c'; then $(CYGPATH_W) 'tjutil.c'; else $(CYGPATH_W) '$(srcdir)/tjutil.c'; fi`

tjbench-rdbmp.o: rdbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-rdbmp.o -MD -MP -MF "$(DEPDIR)/tjbench-rdbmp.Tpo" -c -o tjbench-rdbmp.o `test -f 'rdbmp.c' || echo '$(srcdir)/'`rdbmp.c; \
	then mv -f "$(DEPDIR)/tjbench-rdbmp.Tpo" "$(DEPDIR)/tjbench-rdbmp.Po"; else rm -f "$(DEPDIR)/tjbench-rdbmp.Tpo"; exit 1; fi
#	source='rdbmp.c' object='tjbench-rdbmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-rdbmp.o `test -f 'rdbmp.c' || echo '$(srcdir)/'`rdbmp.c

tjbench-rdbmp.obj: rdbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-rdbmp.obj -MD -MP -MF "$(DEPDIR)/tjbench-rdbmp.Tpo" -c -o tjbench-rdbmp.obj `if test -f 'rdbmp.c'; then $(CYGPATH_W) 'rdbmp.c'; else $(CYGPATH_W) '$(srcdir)/rdbmp.c'; fi`; \
	then mv -f "$(DEPDIR)/tjbench-rdbmp.Tpo" "$(DEPDIR)/tjbench-rdbmp.Po"; else rm -f "$(DEPDIR)/tjbench-rdbmp.Tpo"; exit 1; fi
#	source='rdbmp.c' object='tjbench-rdbmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-rdbmp.obj `if test -f 'rdbmp.c'; then $(CYGPATH_W) 'rdbmp.c'; else $(CYGPATH_W) '$(srcdir)/rdbmp.c'; fi`

tjbench-rdppm.o: rdppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-rdppm.o -MD -MP -MF "$(DEPDIR)/tjbench-rdppm.Tpo" -c -o tjbench-rdppm.o `test -f 'rdppm.c' || echo '$(srcdir)/'`rdppm.c; \
	then mv -f "$(DEPDIR)/tjbench-rdppm.Tpo" "$(DEPDIR)/tjbench-rdppm.Po"; else rm -f "$(DEPDIR)/tjbench-rdppm.Tpo"; exit 1; fi
#	source='rdppm.c' object='tjbench-rdppm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-rdppm.o `test -f 'rdppm.c' || echo '$(srcdir)/'`rdppm.c

tjbench-rdppm.obj: rdppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-rdppm.obj -MD -MP -MF "$(DEPDIR)/tjbench-rdppm.Tpo" -c -o tjbench-rdppm.obj `if test -f 'rdppm.c'; then $(CYGPATH_W) 'rdppm.c'; else $(CYGPATH_W) '$(srcdir)/rdppm.c'; fi`; \
	then mv -f "$(DEPDIR)/tjbench-rdppm.Tpo" "$(DEPDIR)/tjbench-rdppm.Po"; else rm -f "$(DEPDIR)/tjbench-rdppm.Tpo"; exit 1; fi
#	source='rdppm.c' object='tjbench-rdppm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-rdppm.obj `if test -f 'rdppm.c'; then $(CYGPATH_W) 'rdppm.c'; else $(CYGPATH_W) '$(srcdir)/rdppm.c'; fi`

tjbench-wrbmp.o: wrbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-wrbmp.o -MD -MP -MF "$(DEPDIR)/tjbench-wrbmp.Tpo" -c -o tjbench-wrbmp.o `test -f 'wrbmp.c' || echo '$(srcdir)/'`wrbmp.c; \
	then mv -f "$(DEPDIR)/tjbench-wrbmp.Tpo" "$(DEPDIR)/tjbench-wrbmp.Po"; else rm -f "$(DEPDIR)/tjbench-wrbmp.Tpo"; exit 1; fi
#	source='wrbmp.c' object='tjbench-wrbmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-wrbmp.o `test -f 'wrbmp.c' || echo '$(srcdir)/'`wrbmp.c

tjbench-wrbmp.obj: wrbmp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-wrbmp.obj -MD -MP -MF "$(DEPDIR)/tjbench-wrbmp.Tpo" -c -o tjbench-wrbmp.obj `if test -f 'wrbmp.c'; then $(CYGPATH_W) 'wrbmp.c'; else $(CYGPATH_W) '$(srcdir)/wrbmp.c'; fi`; \
	then mv -f "$(DEPDIR)/tjbench-wrbmp.Tpo" "$(DEPDIR)/tjbench-wrbmp.Po"; else rm -f "$(DEPDIR)/tjbench-wrbmp.Tpo"; exit 1; fi
#	source='wrbmp.c' object='tjbench-wrbmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-wrbmp.obj `if test -f 'wrbmp.c'; then $(CYGPATH_W) 'wrbmp.c'; else $(CYGPATH_W) '$(srcdir)/wrbmp.c'; fi`

tjbench-wrppm.o: wrppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-wrppm.o -MD -MP -MF "$(DEPDIR)/tjbench-wrppm.Tpo" -c -o tjbench-wrppm.o `test -f 'wrppm.c' || echo '$(srcdir)/'`wrppm.c; \
	then mv -f "$(DEPDIR)/tjbench-wrppm.Tpo" "$(DEPDIR)/tjbench-wrppm.Po"; else rm -f "$(DEPDIR)/tjbench-wrppm.Tpo"; exit 1; fi
#	source='wrppm.c' object='tjbench-wrppm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-wrppm.o `test -f 'wrppm.c' || echo '$(srcdir)/'`wrppm.c

tjbench-wrppm.obj: wrppm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -MT tjbench-wrppm.obj -MD -MP -MF "$(DEPDIR)/tjbench-wrppm.Tpo" -c -o tjbench-wrppm.obj `if test -f 'wrppm.c'; then $(CYGPATH_W) 'wrppm.c'; else $(CYGPATH_W) '$(srcdir)/wrppm.c'; fi`; \
	then mv -f "$(DEPDIR)/tjbench-wrppm.Tpo" "$(DEPDIR)/tjbench-wrppm.Po"; else rm -f "$(DEPDIR)/tjbench-wrppm.Tpo"; exit 1; fi
#	source='wrppm.c' object='tjbench-wrppm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tjbench_CFLAGS) $(CFLAGS) -c -o tjbench-wrppm.obj `if test -f 'wrppm.c'; then $(CYGPATH_W) 'wrppm.c'; else $(CYGPATH_W) '$(srcdir)/wrppm.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(mkdir_p) "$(DESTDIR)$(man1dir)"
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst"; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man1dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man1dir)/$$inst"; \
	done
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(mkdir_p) "$(DESTDIR)$(docdir)"
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_docDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(docdir)/$$f'"; \
	  $(dist_docDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(docdir)/$$f"; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(docdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(docdir)/$$f"; \
	done
install-dist_exampleDATA: $(dist_example_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(exampledir)" || $(mkdir_p) "$(DESTDIR)$(exampledir)"
	@list='$(dist_example_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dist_exampleDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(exampledir)/$$f'"; \
	  $(dist_exampleDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(exampledir)/$$f"; \
	done

uninstall-dist_exampleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_example_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(exampledir)/$$f'"; \
	  rm -f "$(DESTDIR)$(exampledir)/$$f"; \
	done
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nodist_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in jconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in jconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in jconfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in jconfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/. $(distdir)/release $(distdir)/sharedlib
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA) $(HEADERS) \
		config.h jconfig.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(exampledir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-dist_docDATA install-dist_exampleDATA \
	install-includeHEADERS install-man \
	install-nodist_includeHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-info: install-info-recursive

install-man: install-man1

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_docDATA \
	uninstall-dist_exampleDATA uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES uninstall-man \
	uninstall-nodist_includeHEADERS

uninstall-info: uninstall-info-recursive

uninstall-man: uninstall-man1

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
	check-am clean clean-binPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS \
	clean-recursive ctags ctags-recursive dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-shar dist-tarZ dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-recursive distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_docDATA \
	install-dist_exampleDATA install-exec install-exec-am \
	install-exec-hook install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-man1 install-nodist_includeHEADERS install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_docDATA \
	uninstall-dist_exampleDATA uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES uninstall-man \
	uninstall-man1 uninstall-nodist_includeHEADERS


dist-hook:
	rm -rf `find $(distdir) -name .svn`

test: testclean all
#	$(JAVA) -cp java/turbojpeg.jar -Djava.library.path=.libs TJUnitTest
#	$(JAVA) -cp java/turbojpeg.jar -Djava.library.path=.libs TJUnitTest -bi
#	$(JAVA) -cp java/turbojpeg.jar -Djava.library.path=.libs TJUnitTest -yuv
#	$(JAVA) -cp java/turbojpeg.jar -Djava.library.path=.libs TJUnitTest -yuv -bi
	./tjunittest
	./tjunittest -alloc
	./tjunittest -yuv
	./cjpeg -dct int -outfile testoutint.jpg $(srcdir)/testimages/testorig.ppm
	sh $(srcdir)/md5cmp $(MD5_JPEG_INT) testoutint.jpg
	./cjpeg -dct fast -opt -outfile testoutfst.jpg $(srcdir)/testimages/testorig.ppm
	sh $(srcdir)/md5cmp $(MD5_JPEG_FAST) testoutfst.jpg
	./cjpeg -dct fast -quality 100 -opt -outfile testoutfst100.jpg $(srcdir)/testimages/testorig.ppm
	sh $(srcdir)/md5cmp $(MD5_JPEG_FAST_100) testoutfst100.jpg
	./cjpeg -dct float -outfile testoutflt.jpg $(srcdir)/testimages/testorig.ppm
	sh $(srcdir)/md5cmp $(MD5_JPEG_FLOAT) testoutflt.jpg
#	sh $(srcdir)/md5cmp $(MD5_JPEG_FLOAT_NOSIMD) testoutflt.jpg
	./cjpeg -dct int -grayscale -outfile testoutgray.jpg $(srcdir)/testimages/testorig.ppm
	sh $(srcdir)/md5cmp $(MD5_JPEG_INT_GRAY) testoutgray.jpg
	./djpeg -dct int -fast -ppm -outfile testoutint.ppm $(srcdir)/testimages/testorig.jpg
	sh $(srcdir)/md5cmp $(MD5_PPM_INT) testoutint.ppm
	./djpeg -dct fast -ppm -outfile testoutfst.ppm $(srcdir)/testimages/testorig.jpg
	sh $(srcdir)/md5cmp $(MD5_PPM_FAST) testoutfst.ppm
	./djpeg -dct float -ppm -outfile testoutflt.ppm $(srcdir)/testimages/testorig.jpg
	sh $(srcdir)/md5cmp $(MD5_PPM_FLOAT) testoutflt.ppm
#	sh $(srcdir)/md5cmp $(MD5_PPM_FLOAT_NOSIMD) testoutflt.ppm
	MD5[21]=$(MD5_PPM_INT_2_1); \
	MD5[158]=$(MD5_PPM_INT_15_8); \
	MD5[74]=$(MD5_PPM_INT_7_4); \
	MD5[138]=$(MD5_PPM_INT_13_8); \
	MD5[32]=$(MD5_PPM_INT_3_2); \
	MD5[118]=$(MD5_PPM_INT_11_8); \
	MD5[54]=$(MD5_PPM_INT_5_4); \
	MD5[98]=$(MD5_PPM_INT_9_8); \
	MD5[78]=$(MD5_PPM_INT_7_8); \
	MD5[34]=$(MD5_PPM_INT_3_4); \
	MD5[58]=$(MD5_PPM_INT_5_8); \
	MD5[12]=$(MD5_PPM_INT_1_2); \
	MD5[38]=$(MD5_PPM_INT_3_8); \
	MD5[14]=$(MD5_PPM_INT_1_4); \
	MD5[18]=$(MD5_PPM_INT_1_8); \
	for scale in 2_1 15_8 7_4 13_8 3_2 11_8 5_4 9_8 7_8 3_4 5_8 1_2 3_8 1_4 1_8; do \
		scalearg=`echo $$scale | sed s@_@/@g`; \
		arrayindex=`echo $$scale | sed s@_@@g`; \
		./djpeg -dct int -nosmooth -scale $$scalearg -ppm -outfile testoutint$$scale.ppm $(srcdir)/testimages/testorig.jpg; \
		sh $(srcdir)/md5cmp $${MD5[$$arrayindex]} testoutint$$scale.ppm; \
	done
	./djpeg -dct fast -scale 1/2 -ppm -outfile testoutfst1_2.ppm $(srcdir)/testimages/testorig.jpg
	sh $(srcdir)/md5cmp $(MD5_PPM_FAST_1_2) testoutfst1_2.ppm
	./djpeg -dct int -bmp -colors 256 -outfile testout.bmp $(srcdir)/testimages/testorig.jpg
	sh $(srcdir)/md5cmp $(MD5_BMP_256) testout.bmp
	./cjpeg -dct int -arithmetic -outfile testoutari.jpg $(srcdir)/testimages/testorig.ppm
	sh $(srcdir)/md5cmp $(MD5_JPEG_ARI) testoutari.jpg
	./jpegtran -arithmetic -outfile testouta.jpg $(srcdir)/testimages/testimgint.jpg
	sh $(srcdir)/md5cmp $(MD5_JPEG_ARI) testouta.jpg
	./djpeg -dct int -fast -ppm -outfile testoutari.ppm $(srcdir)/testimages/testimgari.jpg
	sh $(srcdir)/md5cmp $(MD5_PPM_ARI) testoutari.ppm
	./jpegtran -outfile testouta.jpg $(srcdir)/testimages/testimgari.jpg
	sh $(srcdir)/md5cmp $(MD5_JPEG_INT) testouta.jpg
	./cjpeg -dct int -progressive -outfile testoutp.jpg $(srcdir)/testimages/testorig.ppm
	sh $(srcdir)/md5cmp $(MD5_JPEG_PROG) testoutp.jpg
	./jpegtran -outfile testoutt.jpg testoutp.jpg
	sh $(srcdir)/md5cmp $(MD5_JPEG_INT) testoutt.jpg
	./jpegtran -crop 120x90+20+50 -transpose -perfect -outfile testoutcrop.jpg $(srcdir)/testimages/testorig.jpg
	sh $(srcdir)/md5cmp $(MD5_JPEG_CROP) testoutcrop.jpg

testclean:
	rm -f testout*
	rm -f *_GRAY_*.bmp
	rm -f *_GRAY_*.png
	rm -f *_GRAY_*.ppm
	rm -f *_GRAY_*.jpg
	rm -f *_GRAY.yuv
	rm -f *_420_*.bmp
	rm -f *_420_*.png
	rm -f *_420_*.ppm
	rm -f *_420_*.jpg
	rm -f *_420.yuv
	rm -f *_422_*.bmp
	rm -f *_422_*.png
	rm -f *_422_*.ppm
	rm -f *_422_*.jpg
	rm -f *_422.yuv
	rm -f *_444_*.bmp
	rm -f *_444_*.png
	rm -f *_444_*.ppm
	rm -f *_444_*.jpg
	rm -f *_444.yuv
	rm -f *_440_*.bmp
	rm -f *_440_*.png
	rm -f *_440_*.ppm
	rm -f *_440_*.jpg
	rm -f *_440.yuv

tjtest:
	sh ./tjbenchtest
#	sh ./tjbenchtest.java

#install-exec-hook:
#	__PREFIX=`echo ${prefix} | sed -e 's@\/*$$@@'`;  \
#	if [ "$$__PREFIX" = "/opt/libjpeg-turbo" ]; then  \
#		cd $(DESTDIR)/${prefix};  \
#		if [ -d lib -a ! -d lib64 -a ! -h lib64 ]; then  \
#			$(LN_S) lib lib64;  \
#		fi  \
#	fi

install-exec-hook:
	__PREFIX=`echo ${prefix} | sed -e 's@\/*$$@@'`;  \
	if [ "$$__PREFIX" = "/opt/libjpeg-turbo" ]; then  \
		cd $(DESTDIR)/${prefix};  \
		if [ -d lib -a ! -d lib32 -a ! -h lib32 ]; then  \
			$(LN_S) lib lib32;  \
		fi  \
	fi

rpm: all
	TMPDIR=`mktemp -d /tmp/${PACKAGE_NAME}-build.XXXXXX`; \
	mkdir -p $$TMPDIR/RPMS; \
	ln -fs `pwd` $$TMPDIR/BUILD; \
	rm -f ${PACKAGE_NAME}-${VERSION}.${RPMARCH}.rpm; \
	rpmbuild -bb --define "_blddir $$TMPDIR/buildroot"  \
		--define "_topdir $$TMPDIR" \
		--target ${RPMARCH} pkgscripts/libjpeg-turbo.spec; \
	cp $$TMPDIR/RPMS/${RPMARCH}/${PACKAGE_NAME}-${VERSION}-${BUILD}.${RPMARCH}.rpm \
		${PACKAGE_NAME}-${VERSION}.${RPMARCH}.rpm; \
	rm -rf $$TMPDIR

srpm: dist-gzip
	TMPDIR=`mktemp -d /tmp/${PACKAGE_NAME}-build.XXXXXX`; \
	mkdir -p $$TMPDIR/RPMS; \
	mkdir -p $$TMPDIR/SRPMS; \
	mkdir -p $$TMPDIR/BUILD; \
	mkdir -p $$TMPDIR/SOURCES; \
	mkdir -p $$TMPDIR/SPECS; \
	rm -f ${PACKAGE_NAME}-${VERSION}.src.rpm; \
	cp ${PACKAGE_NAME}-${VERSION}.tar.gz $$TMPDIR/SOURCES; \
	cat pkgscripts/libjpeg-turbo.spec | sed s/%{_blddir}/%{_tmppath}/g \
		| sed s/#--\>//g \
		> $$TMPDIR/SPECS/libjpeg-turbo.spec; \
	rpmbuild -bs --define "_topdir $$TMPDIR" $$TMPDIR/SPECS/libjpeg-turbo.spec; \
	cp $$TMPDIR/SRPMS/${PACKAGE_NAME}-${VERSION}-${BUILD}.src.rpm \
		${PACKAGE_NAME}-${VERSION}.src.rpm; \
	rm -rf $$TMPDIR

deb: all
	sh pkgscripts/makedpkg

#udmg: all
#	sh pkgscripts/makemacpkg -build32 ${BUILDDIR32}

#iosdmg: all
#	sh pkgscripts/makemacpkg -build32 ${BUILDDIR32} -buildarmv6 ${BUILDDIRARMV6} -buildarmv7 ${BUILDDIRARMV7} -buildarmv7s ${BUILDDIRARMV7S}

iosdmg: all
	sh pkgscripts/makemacpkg -buildarmv6 ${BUILDDIRARMV6} -buildarmv7 ${BUILDDIRARMV7} -buildarmv7s ${BUILDDIRARMV7S}

dmg: all
	sh pkgscripts/makemacpkg

cygwinpkg: all
	sh pkgscripts/makecygwinpkg
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
